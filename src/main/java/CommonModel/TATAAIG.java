package CommonModel;


import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Scanner;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.soap.*;
import javax.xml.transform.*;
import javax.xml.transform.stream.*;

import org.apache.http.HttpEntity;

import CommonModel.DBConnection;


public class TATAAIG {

	private static String param1;
	private static String param2;
	private static String param3;
	private static String param4;
	private static String param5;
	private static String DBSrc;
	private static String spname;
	

    
    public void param1(String param1) {
		this.param1 = param1;
	}

	public void param2(String param2) {
		this.param2 = param2;
	}

	public void param3(String param3) {
		this.param3 = param3;
	}

	public void param4(String param4) {
		this.param4 = param4;
	}

	public void param5(String param5) {
		this.param5 = param5;
	}

	public void DBSrc(String DBSrc) {
		this.DBSrc = DBSrc;
	}

	public void spname(String spname) {
		this.spname = spname;
	}
	//USERID: abeKldFjg345i9eklDflkfoasd

	public String PANCINDIN() throws SQLException, IOException {
      
		

            String inputLine = null;
            String ResCode = null;
            String url="";
            String PSWRD="";
           
            
   /*       PreparedStatement preparedStatement = null;
      	  Connection con = DBConnection.getConnection(DBSrc);
      	  
      	  
      	preparedStatement = con.prepareStatement("{ call " + spname+ "(?,?,?,?,?) }");
      	preparedStatement.setString(1,param1);
  		preparedStatement.setString(2,param2 );
  		preparedStatement.setString(3,param3);
  		preparedStatement.setString(4,param4);
  		preparedStatement.setString(5,param5);
      	ResultSet results=preparedStatement.executeQuery();  
      	while (results.next()) {
      	url = results.getString("Url"); 
      	PSWRD = results.getString("PSWRD");
      	}
      	con.close();
      	*/
try{
		URL uri1 = new URL("https://pipuat.tataaiginsurance.in/tagichubms/ws/v1/ws/gcsps/gcpsquote");
		HttpURLConnection connection =(HttpURLConnection) uri1.openConnection();
		connection.setRequestMethod("POST");
		//connection.setRequestProperty("Accept", "application/xml");
		connection.setRequestProperty("QDATA", param2);
		connection.setRequestProperty("productid", "2878");
		connection.setRequestProperty("SRC", "2878");
		connection.setRequestProperty("T", "2878");
		
		
		
		
		InputStream xml = connection.getInputStream();
		int code = connection.getResponseCode();
        System.out.println("Response code of the object is "+code);
        ResCode=connection.getHeaderField("RESP_CODE");

        Scanner s = new Scanner(xml).useDelimiter("\\A");
        String result1 = s.hasNext() ? s.next() : "";
        
        System.out.println(result1);
        result1=  result1.replace("&gt;", ">").replace("&lt;", "<");
    
        Connection con1 = DBConnection.getConnection(DBSrc);
        PreparedStatement PS = null;
        
        PS = con1.prepareStatement("{ call LSW_SPANCINDINLOG (?,?,?,?,?) }"); 
    	PS.setString(1,result1);
        PS.setString(2,param2 );
        PS.setString(3,param3+'|'+param1);
        PS.setLong(4,code);
        PS.setString(5,ResCode+'|'+param4);
    	ResultSet results1=PS.executeQuery();  
    	while (results1.next()) {
    		 String Respnse = results1.getString("Result"); 
    	}
    		con1.close();

		connection.disconnect();
		
		if(ResCode.equals("A100"))
		{inputLine="Successful transaction";}
		if(ResCode.equals("A210"))
		{inputLine="Minimum parameter length not provided";}
		if(ResCode.equals("A200"))
		{inputLine="No Record Found";}
		if(ResCode.equals("A300"))
		{inputLine="ome parameters missing in the URL";}
		if(ResCode.equals("A310"))
		{inputLine="No parameter string provided in the URL";}
		if(ResCode.equals("A320"))
		{inputLine="Unauthorized Access";}
		if(ResCode.equals("A330"))
		{inputLine="USERID not found in Request Header";}
		if(ResCode.equals("A340"))
		{inputLine="Timeout";}
		if(ResCode.equals("A400"))
		{inputLine="Error";}
		if(ResCode.equals("A500"))
		{inputLine="Result exceeded 1000 records. Please try again";}
		if(ResCode.equals("A510"))
		{inputLine="The ID generated by the application is not unique";}
		if(ResCode.equals("A520"))
		{inputLine="Maximum limit of API calls during peak hours exceeded";}
		if(ResCode.equals("A530"))
		{inputLine="Maximum limit of API calls during the month exceeded";}
	}
          
            catch (Exception e) {
                System.err.println("Error occurred while sending SOAP Request to Server");
                e.printStackTrace();
            }

			return inputLine+'|'+ResCode;
       
	}
	

	
}





