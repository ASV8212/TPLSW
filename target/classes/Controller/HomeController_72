package Controller;

import CommonModel.CS_FetchFormFieldData;
import CommonModel.CS_Migrformdata;
import CommonModel.ExcelNoDelUploadHandler;
import CommonModel.ExcelNoDelUploadHandlerCustome;
import CommonModel.FileUploadHandler;
import CommonModel.FncallWebserviceGrid;
import CommonModel.GetExclData;
import CommonModel.GetExclDataNOF;
import CommonModel.GetExclDataSheet;
import CommonModel.GridView;
import CommonModel.JerseyClientPost;
import CommonModel.MailSendWthAttchRPTBdy;
import CommonModel.MailSending;
import CommonModel.PANCINDIN;
import CommonModel.PaymentGW;
import CommonModel.SOAPClientSAAJ;
import CommonModel.UI_ApprovalLimitChk;
import CommonModel.UI_GetData;
import CommonModel.UI_LoginGetData;
import CommonModel.UI_GetLoginPwd;
import CommonModel.UI_PasswordReset;
import CommonModel.UI_PasswordUpdate;
import CommonModel.UI_fetchActivityform;
import CommonModel.UI_fetchformButtonData;
import CommonModel.UI_fetchformdata;
import CommonModel.UI_fetchformdata_get2date;
import CommonModel.UI_fetchformdata_get2dateTime;
import CommonModel.UI_formdatains_General;
import CommonModel.UI_formdatainsert;
import CommonModel.UpMailSending;
import CommonModel.deletefile;
import CommonModel.sendSMS;
import CommonModel.UI_GetMainTxtData;
import CommonModel.ExcelDynmcUpld;
import CommonModel.ExcelMultiDynmcUpld;
import Integration.InsrncePrmeium;
import Integration.*;
import ConfigModel.UI_FetchHistTblClmNames;
import ConfigModel.UI_formdatains_ConfigScreens;
import ConfigModel.UI_formdatains_UserProfile;
import Controls.GetDBData;
import Controls.JSInterfaceCall;
import Controls.WFCall;
import MenuConfigurationModel.UI_fetchMenuFrRearrge2;
import MenuConfigurationModel.UI_fetchMenuFrRearrge3;
import MenuConfigurationModel.UI_fetchMenuFrmRearrge;
import MenuConfigurationModel.UI_fetchRemenuID;
import MenuConfigurationModel.UI_formdatainsInsert;
import MenuConfigurationModel.UI_formdatains_MenuModifyEntry;
import MenuConfigurationModel.UI_formdatains_MenuRearrangeEntry;
import MenuConfigurationModel.UI_formdatains_NewMENURIGHTSDel;
import MenuConfigurationModel.UI_formdatains_NewMENURIGHTSEnt;
import MenuConfigurationModel.UI_formdatains_NewSubMenuEntry;
import MenuConfigurationModel.UI_formdatains_NewSubMenuLevel2;
import QueueConfigurationModel.UI_FetchInsertedTblColName;
import QueueConfigurationModel.UI_FetchQueuenamefrRearge;
import QueueConfigurationModel.UI_FetchTblColName;
import QueueConfigurationModel.UI_FetchTblName;
import QueueConfigurationModel.UI_FetchWrkflowname;
import QueueConfigurationModel.UI_formdatainsInsertQueue;
import QueueConfigurationModel.UI_formdatainsQueueRights;
import QueueConfigurationModel.UI_formdatainsRearrangedQueue;
import QueueConfigurationModel.UI_formdatains_QueueRearrangeEntry;
import QueueConfigurationModel.UI_formdatains_QueueRearrangeEntryCheck;
import UserviewModel.UI_formdata_GetMainPageHTML;

import CommonModel.UI_GetPageURL;
import CommonModel.UI_WFInit;
import CommonModel.CommonFns;
import CommonModel.DBConnection;

import java.io.PrintStream;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.URL;
import java.net.URLEncoder;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.sql.Types;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.util.Base64.Decoder;
import java.util.Date;
import java.util.Locale;
import java.util.Properties;
import java.util.TimeZone;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

//import org.apache.catalina.util.URLEncoder;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.streaming.SXSSFSheet;
import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.codehaus.jettison.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.io.*;
import java.util.ArrayList;
import java.util.Base64;
//import org.json.JSONObject;
//import org.json.XML;

@Controller

public class HomeController {
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);

	public HomeController() {
	}

	/** Front End Portal Page Mapping Start **/

	@RequestMapping(value = { "" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Login(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);
		request.setAttribute("UNA", session.getAttribute("UNA"));
		session.removeAttribute("UNA");
		return "Common/Pages/Userview/Login_Audit";
	}

		// 7073 Controller Start
	@RequestMapping(value = { "Home" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String FEPHome(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				
				// Added Dashboard Start
                ArrayList<String> Data1=new ArrayList<String>();
				
				Data1	= GetDBData.Call( ""+session.getAttribute("UsrSession"),"", "", "", request.getParameter("PrMs5"), "LSW_SDASHBOARDCNTNT");
				
				request.setAttribute("DASHBRD1", Data1.get(0));
				request.setAttribute("DASHBRD2", Data1.get(1));
				request.setAttribute("DASHBRD3", Data1.get(2));
				request.setAttribute("DASHBRD4", Data1.get(3));
				request.setAttribute("DASHBRD5", Data1.get(4));
				request.setAttribute("DASHBRD6", Data1.get(5));
				request.setAttribute("DASHBRD7", Data1.get(6));
				request.setAttribute("DASHBRD8", Data1.get(7));
				request.setAttribute("DASHBRD9", Data1.get(8));
				request.setAttribute("DASHBRD10", Data1.get(9));
				// Added Dashboard End
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
				
			return "Home";
		}

	}
	
	// 7073 Controller End
	
	/*// 7075 Controller Start
	
	@RequestMapping(value = { "Home" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String FEPHome(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				

				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
				
			return "Home";
		}

	}
	// 7075 Controller End*/
	
	// Main Pages
	@RequestMapping(value = { "MyApplication" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String MyApplication(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "MyApplication";
		}
	}

	//Manage Deferment Strt
		@RequestMapping(value = { "ManageDeferment" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String ManageDeferment(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
				

				 ArrayList<String> Data=new ArrayList<String>();
					
					Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
					
					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "ManageDeferment";
			}
		}
		//Manage Deferment End
		
		
		//Manage OTC Start
				@RequestMapping(value = { "ManageOTC" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String ManageOTC(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
						

						 ArrayList<String> Data=new ArrayList<String>();
							
							Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
							
							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
						return "ManageOTC";
					}
				}
				//Manage OTC End
				
				//diruser Start
				@RequestMapping(value = { "diruser" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String diruser(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
						

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
							
							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
						return "diruser";
					}
				}
				//diruser End
				
				
				//MonthRpt Start
				@RequestMapping(value = { "MonthRpt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String MonthRpt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
						

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
							
							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
						return "MonthRpt";
					}
				}
				//MonthRpt End
				
				
				// Dashboardconfig Start	
				@RequestMapping(value = { "Dashboardconfig" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String Dashboardconfig(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
							
						return "Dashboardconfig";
					}

				}	
				
				//Dashboardconfig end
				
				
				@RequestMapping(value={"/ExcelDynmcUpld"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
				  @ResponseBody
				  public String ExcelDynmcUpld(HttpServletRequest request, HttpServletResponse response,HttpSession session)
				    throws Exception
				  {
				 ExcelDynmcUpld getdata = new ExcelDynmcUpld();
				    boolean isMultipart = ServletFileUpload.isMultipartContent(request);
				    String param1 = request.getParameter("param1");
				    String param2 = request.getParameter("param2");
				    String param3 = request.getParameter("param3");
				    String param4 = request.getParameter("param4");
				    String param5 = request.getParameter("param5");
				    String DBSrc = request.getParameter("DBSrc");
				   
				    getdata.param1(param1);
				    getdata.param2(param2);
				    getdata.param3(param3);
				    getdata.param4(param4);
				    getdata.param5(param5);
				    getdata.DBSrc(DBSrc);
				   
				    Object time = session.getAttribute("LogSession");
				    if (time == null) {
				    	//String retval = getdata.ExcelDynmcUpld(request, response);
					    //return retval;
					    
				        return "redirect:";
				    }
				    else
				    {
				    String retval = getdata.ExcelDynmcUpld(request, response);
				    return retval;
				    }
				  }
				
				
				
				//start Document templates 
				
					@RequestMapping(value = { "Doctemplates" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
					public String Doctemplates(Locale locale, Model model, HttpSession session, HttpServletRequest request,
							HttpServletResponse response) {
						logger.info("Welcome home! The client locale is {}.", locale);

						
						
						Object time = session.getAttribute("LogSession");
						if (time == null) {
							return "redirect:";
						} else {
							
							request.setAttribute("User", session.getAttribute("UsrSession"));
							request.setAttribute("PrcsID", request.getParameter("PrcsID"));
							request.setAttribute("ActvID", request.getParameter("ActvID"));
							request.setAttribute("Action", request.getParameter("Action"));
							request.setAttribute("WFURL", request.getParameter("WFURL"));

							request.setAttribute("FormAction", request.getParameter("FormAction"));
							request.setAttribute("FormName", request.getParameter("FormName"));
							request.setAttribute("FormColor", request.getParameter("FormColor"));

							request.setAttribute("PrMs1", request.getParameter("PrMs1"));
							request.setAttribute("PrMs2", request.getParameter("PrMs2"));
							request.setAttribute("PrMs3", request.getParameter("PrMs3"));
							request.setAttribute("PrMs4", request.getParameter("PrMs4"));
							request.setAttribute("PrMs5", request.getParameter("PrMs5"));
							request.setAttribute("PrMs6", request.getParameter("PrMs6"));
							request.setAttribute("PrMs7", request.getParameter("PrMs7"));
							request.setAttribute("PrMs8", request.getParameter("PrMs8"));
							request.setAttribute("PrMs9", request.getParameter("PrMs9"));
							request.setAttribute("PrMs10", request.getParameter("PrMs10"));

							request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

							 ArrayList<String> Data=new ArrayList<String>();
								
							 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

								
								request.setAttribute("MAINTABDATA", Data.get(0));
								request.setAttribute("FORMHEADING", Data.get(1));
								request.setAttribute("CONTROLDATA", Data.get(2));
								request.setAttribute("PAGETABDATA", Data.get(3));
								
								request.setAttribute("AppInfo", Data.get(4));
								request.setAttribute("SUBPAGETABDATA", Data.get(5));
								request.setAttribute("HEADERDATA", Data.get(6));
								request.setAttribute("DMY1", Data.get(7));
								request.setAttribute("DMY2", Data.get(8));
								request.setAttribute("DMY3", Data.get(9));
								request.setAttribute("DMY4", Data.get(10));
								request.setAttribute("DMY5", Data.get(11));
								request.setAttribute("DMY6", Data.get(12));
								request.setAttribute("DMY7", Data.get(13));
								
								Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
								request.setAttribute("DMY8", Data.get(0));
								request.setAttribute("DMY9", Data.get(1));
								request.setAttribute("DMY10", Data.get(2));
								request.setAttribute("DMY11", Data.get(3));
								request.setAttribute("DMY12", Data.get(4));
								request.setAttribute("DMY13", Data.get(5));
								request.setAttribute("DMY14", Data.get(6));
								request.setAttribute("DMY15", Data.get(7));
								request.setAttribute("DMY16", Data.get(8));
								request.setAttribute("DMY17", Data.get(9));
								request.setAttribute("DMY18", Data.get(10));
								request.setAttribute("DMY19", Data.get(11));
								request.setAttribute("DMY20", Data.get(12));
								request.setAttribute("DMY21", Data.get(13));
								
							return "Doctemplates";
						}

					}	
					
					
					//end Document templates 
			        
			         @RequestMapping(value = { "ProjFundMST" }, method = { RequestMethod.GET })
  public String ProjFundMST(final Locale locale, final Model model, final HttpSession session, final HttpServletRequest request, final HttpServletResponse response) {
      HomeController.logger.info("Welcome home! The client locale is {}.", (Object)locale);
      final Object time = session.getAttribute("LogSession");
      if (time == null) {
          return "redirect:";
      }
      request.setAttribute("User", session.getAttribute("UsrSession"));
      request.setAttribute("PrcsID", (Object)request.getParameter("PrcsID"));
      request.setAttribute("ActvID", (Object)request.getParameter("ActvID"));
      request.setAttribute("Action", (Object)request.getParameter("Action"));
      request.setAttribute("WFURL", (Object)request.getParameter("WFURL"));
      request.setAttribute("FormAction", (Object)request.getParameter("FormAction"));
      request.setAttribute("FormName", (Object)request.getParameter("FormName"));
      request.setAttribute("FormColor", (Object)request.getParameter("FormColor"));
      request.setAttribute("PrMs1", (Object)request.getParameter("PrMs1"));
      request.setAttribute("PrMs2", (Object)request.getParameter("PrMs2"));
      request.setAttribute("PrMs3", (Object)request.getParameter("PrMs3"));
      request.setAttribute("PrMs4", (Object)request.getParameter("PrMs4"));
      request.setAttribute("PrMs5", (Object)request.getParameter("PrMs5"));
      request.setAttribute("PrMs6", (Object)request.getParameter("PrMs6"));
      request.setAttribute("PrMs7", (Object)request.getParameter("PrMs7"));
      request.setAttribute("PrMs8", (Object)request.getParameter("PrMs8"));
      request.setAttribute("PrMs9", (Object)request.getParameter("PrMs9"));
      request.setAttribute("PrMs10", (Object)request.getParameter("PrMs10"));
      request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
      ArrayList<String> Data = new ArrayList<String>();
      Data = (ArrayList<String>)GetDBData.Call(String.valueOf(request.getParameter("ActvID")) + "|" + session.getAttribute("UsrSession"), request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
      request.setAttribute("MAINTABDATA", (Object)Data.get(0));
      request.setAttribute("FORMHEADING", (Object)Data.get(1));
      request.setAttribute("CONTROLDATA", (Object)Data.get(2));
      request.setAttribute("PAGETABDATA", (Object)Data.get(3));
      request.setAttribute("AppInfo", (Object)Data.get(4));
      request.setAttribute("SUBPAGETABDATA", (Object)Data.get(5));
      request.setAttribute("HEADERDATA", (Object)Data.get(6));
      request.setAttribute("DMY1", (Object)Data.get(7));
      request.setAttribute("DMY2", (Object)Data.get(8));
      request.setAttribute("DMY3", (Object)Data.get(9));
      request.setAttribute("DMY4", (Object)Data.get(10));
      request.setAttribute("DMY5", (Object)Data.get(11));
      request.setAttribute("DMY6", (Object)Data.get(12));
      request.setAttribute("DMY7", (Object)Data.get(13));
      Data = (ArrayList<String>)GetDBData.Call(String.valueOf(request.getParameter("ActvID")) + "|" + session.getAttribute("UsrSession"), request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), String.valueOf(request.getParameter("PrMs8")) + '~' + request.getParameter("PrMs1") + '~' + request.getParameter("PrMs2") + '~' + request.getParameter("PrMs3") + '~' + request.getParameter("PrMs4") + '~' + request.getParameter("PrMs5") + '~' + request.getParameter("PrMs6") + '~' + request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
      request.setAttribute("DMY8", (Object)Data.get(0));
      request.setAttribute("DMY9", (Object)Data.get(1));
      request.setAttribute("DMY10", (Object)Data.get(2));
      request.setAttribute("DMY11", (Object)Data.get(3));
      request.setAttribute("DMY12", (Object)Data.get(4));
      request.setAttribute("DMY13", (Object)Data.get(5));
      request.setAttribute("DMY14", (Object)Data.get(6));
      request.setAttribute("DMY15", (Object)Data.get(7));
      request.setAttribute("DMY16", (Object)Data.get(8));
      request.setAttribute("DMY17", (Object)Data.get(9));
      request.setAttribute("DMY18", (Object)Data.get(10));
      request.setAttribute("DMY19", (Object)Data.get(11));
      request.setAttribute("DMY20", (Object)Data.get(12));
      request.setAttribute("DMY21", (Object)Data.get(13));
      return "ProjFundMST";
  }
 
			        			
					@RequestMapping(value = { "ProjFund" }, method = { RequestMethod.GET })
					  public String ProjFund(final Locale locale, final Model model, final HttpSession session, final HttpServletRequest request, final HttpServletResponse response) {
					      HomeController.logger.info("Welcome home! The client locale is {}.", (Object)locale);
					      final Object time = session.getAttribute("LogSession");
					      if (time == null) {
					          return "redirect:";
					      }
					      request.setAttribute("User", session.getAttribute("UsrSession"));
					      request.setAttribute("PrcsID", (Object)request.getParameter("PrcsID"));
					      request.setAttribute("ActvID", (Object)request.getParameter("ActvID"));
					      request.setAttribute("Action", (Object)request.getParameter("Action"));
					      request.setAttribute("WFURL", (Object)request.getParameter("WFURL"));
					      request.setAttribute("FormAction", (Object)request.getParameter("FormAction"));
					      request.setAttribute("FormName", (Object)request.getParameter("FormName"));
					      request.setAttribute("FormColor", (Object)request.getParameter("FormColor"));
					      request.setAttribute("PrMs1", (Object)request.getParameter("PrMs1"));
					      request.setAttribute("PrMs2", (Object)request.getParameter("PrMs2"));
					      request.setAttribute("PrMs3", (Object)request.getParameter("PrMs3"));
					      request.setAttribute("PrMs4", (Object)request.getParameter("PrMs4"));
					      request.setAttribute("PrMs5", (Object)request.getParameter("PrMs5"));
					      request.setAttribute("PrMs6", (Object)request.getParameter("PrMs6"));
					      request.setAttribute("PrMs7", (Object)request.getParameter("PrMs7"));
					      request.setAttribute("PrMs8", (Object)request.getParameter("PrMs8"));
					      request.setAttribute("PrMs9", (Object)request.getParameter("PrMs9"));
					      request.setAttribute("PrMs10", (Object)request.getParameter("PrMs10"));
					      request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
					      ArrayList<String> Data = new ArrayList<String>();
					      Data = (ArrayList<String>)GetDBData.Call(String.valueOf(request.getParameter("ActvID")) + "|" + session.getAttribute("UsrSession"), request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
					      request.setAttribute("MAINTABDATA", (Object)Data.get(0));
					      request.setAttribute("FORMHEADING", (Object)Data.get(1));
					      request.setAttribute("CONTROLDATA", (Object)Data.get(2));
					      request.setAttribute("PAGETABDATA", (Object)Data.get(3));
					      request.setAttribute("AppInfo", (Object)Data.get(4));
					      request.setAttribute("SUBPAGETABDATA", (Object)Data.get(5));
					      request.setAttribute("HEADERDATA", (Object)Data.get(6));
					      request.setAttribute("DMY1", (Object)Data.get(7));
					      request.setAttribute("DMY2", (Object)Data.get(8));
					      request.setAttribute("DMY3", (Object)Data.get(9));
					      request.setAttribute("DMY4", (Object)Data.get(10));
					      request.setAttribute("DMY5", (Object)Data.get(11));
					      request.setAttribute("DMY6", (Object)Data.get(12));
					      request.setAttribute("DMY7", (Object)Data.get(13));
					      Data = (ArrayList<String>)GetDBData.Call(String.valueOf(request.getParameter("ActvID")) + "|" + session.getAttribute("UsrSession"), request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), String.valueOf(request.getParameter("PrMs8")) + '~' + request.getParameter("PrMs1") + '~' + request.getParameter("PrMs2") + '~' + request.getParameter("PrMs3") + '~' + request.getParameter("PrMs4") + '~' + request.getParameter("PrMs5") + '~' + request.getParameter("PrMs6") + '~' + request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					      request.setAttribute("DMY8", (Object)Data.get(0));
					      request.setAttribute("DMY9", (Object)Data.get(1));
					      request.setAttribute("DMY10", (Object)Data.get(2));
					      request.setAttribute("DMY11", (Object)Data.get(3));
					      request.setAttribute("DMY12", (Object)Data.get(4));
					      request.setAttribute("DMY13", (Object)Data.get(5));
					      request.setAttribute("DMY14", (Object)Data.get(6));
					      request.setAttribute("DMY15", (Object)Data.get(7));
					      request.setAttribute("DMY16", (Object)Data.get(8));
					      request.setAttribute("DMY17", (Object)Data.get(9));
					      request.setAttribute("DMY18", (Object)Data.get(10));
					      request.setAttribute("DMY19", (Object)Data.get(11));
					      request.setAttribute("DMY20", (Object)Data.get(12));
					      request.setAttribute("DMY21", (Object)Data.get(13));
					      return "ProjFund";
					  }
					 
				
				
				@RequestMapping(value = { "DirUserMST" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String DirUserMST(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
							
						return "DirUserMST";
					}

				}	
				
				// VendorMST Start	
				@RequestMapping(value = { "VendorMST" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String VendorMST(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
							
						return "VendorMST";
					}

				}		
					
				
				// VendorCreation Start	
				@RequestMapping(value = { "Vendorcreation" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String Vendorcreation(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

						 ArrayList<String> Data=new ArrayList<String>();
							
						 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
							
						return "Vendorcreation";
					}

				}	
				//Manage PDD Start
				@RequestMapping(value = { "ManagePDD" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String ManagePDD(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
						

						 ArrayList<String> Data=new ArrayList<String>();
							
							Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
							
							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
						return "ManagePDD";
					}
				}
				//Manage PDD End
				
				//Manage Dev Start
				@RequestMapping(value = { "ManageDev" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
				public String ManageDev(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						request.setAttribute("User", session.getAttribute("UsrSession"));
						request.setAttribute("PrcsID", request.getParameter("PrcsID"));
						request.setAttribute("ActvID", request.getParameter("ActvID"));
						request.setAttribute("Action", request.getParameter("Action"));
						request.setAttribute("WFURL", request.getParameter("WFURL"));

						request.setAttribute("FormAction", request.getParameter("FormAction"));
						request.setAttribute("FormName", request.getParameter("FormName"));
						request.setAttribute("FormColor", request.getParameter("FormColor"));

						request.setAttribute("PrMs1", request.getParameter("PrMs1"));
						request.setAttribute("PrMs2", request.getParameter("PrMs2"));
						request.setAttribute("PrMs3", request.getParameter("PrMs3"));
						request.setAttribute("PrMs4", request.getParameter("PrMs4"));
						request.setAttribute("PrMs5", request.getParameter("PrMs5"));
						request.setAttribute("PrMs6", request.getParameter("PrMs6"));
						request.setAttribute("PrMs7", request.getParameter("PrMs7"));
						request.setAttribute("PrMs8", request.getParameter("PrMs8"));
						request.setAttribute("PrMs9", request.getParameter("PrMs9"));
						request.setAttribute("PrMs10", request.getParameter("PrMs10"));

						request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
						

						 ArrayList<String> Data=new ArrayList<String>();
							
							Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
							
							
							request.setAttribute("MAINTABDATA", Data.get(0));
							request.setAttribute("FORMHEADING", Data.get(1));
							request.setAttribute("CONTROLDATA", Data.get(2));
							request.setAttribute("PAGETABDATA", Data.get(3));
							
							request.setAttribute("AppInfo", Data.get(4));
							request.setAttribute("SUBPAGETABDATA", Data.get(5));
							request.setAttribute("HEADERDATA", Data.get(6));
							request.setAttribute("DMY1", Data.get(7));
							request.setAttribute("DMY2", Data.get(8));
							request.setAttribute("DMY3", Data.get(9));
							request.setAttribute("DMY4", Data.get(10));
							request.setAttribute("DMY5", Data.get(11));
							request.setAttribute("DMY6", Data.get(12));
							request.setAttribute("DMY7", Data.get(13));
							
							Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
							request.setAttribute("DMY8", Data.get(0));
							request.setAttribute("DMY9", Data.get(1));
							request.setAttribute("DMY10", Data.get(2));
							request.setAttribute("DMY11", Data.get(3));
							request.setAttribute("DMY12", Data.get(4));
							request.setAttribute("DMY13", Data.get(5));
							request.setAttribute("DMY14", Data.get(6));
							request.setAttribute("DMY15", Data.get(7));
							request.setAttribute("DMY16", Data.get(8));
							request.setAttribute("DMY17", Data.get(9));
							request.setAttribute("DMY18", Data.get(10));
							request.setAttribute("DMY19", Data.get(11));
							request.setAttribute("DMY20", Data.get(12));
							request.setAttribute("DMY21", Data.get(13));
						return "ManageDev";
					}
				}
				//Manage Dev End	
				
				//WFV1 START
				@RequestMapping(value = {"WFINITV1"}, method = {org.springframework.web.bind.annotation.RequestMethod.POST})
				  @ResponseBody
				  public String WFINITV1(Locale locale, Model model, HttpSession session, HttpServletRequest request, HttpServletResponse response) {
				    logger.info("Welcome home! The client locale is {}.", locale);
				    Object time = session.getAttribute("LogSession");
				    if (time == null)
				      return "redirect:"; 
				    String Response = "";
				    String ProcessID = "";
				    String ActivityID = "";
				    String http = request.getHeader("Origin");
				    String Referer = request.getHeader("Referer");
				    
				    String CODE = request.getParameter("CODE");
				    String NAME = request.getParameter("NAME");
				    String OldPrcsID = request.getParameter("OldPrcsID");
				    String SPNAME = request.getParameter("SPNAME");
				    
				    Response = WFCall.WFInit(session.getAttribute("UsrSession").toString(), session.getAttribute("CPMSession").toString(), http, Referer, CODE+"|"+NAME, "LSW_SWFINITCALLALL");
				    String[] Reponse = Response.split("~");
				    ProcessID = Reponse[0];
				    ActivityID = Reponse[1];
				    if (!ProcessID.equals("No Data")) {
				    	if(SPNAME != null && !SPNAME.isEmpty()) {
				    		ArrayList<String> Data = new ArrayList<String>();
				  	      	Data = GetDBData.Call(ProcessID, ActivityID, OldPrcsID, "", "", SPNAME);
				    	}
				      Response = "Workflow Initiated~" + ProcessID + "~" + ActivityID;
				    } else {
				      Response = "Workflow Initiation Failed~No Data~No Data";
				    } 
				    return Response;
				  }
				//WFV1 END
				
				//MCA Check Start
				@RequestMapping(value = { "/MCAVerfy" }, method = {
						org.springframework.web.bind.annotation.RequestMethod.POST })
						@ResponseBody
						public String MCAVerfy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
						throws Exception {
						Object time = session.getAttribute("LogSession");
						String s1="";
						if (time == null) {
						return "redirect:";
						} else {

							String param1 = request.getParameter("CINNO");
							String param2 = request.getParameter("PRCSID");
							String param3 = request.getParameter("PARAM3");
							String param4 = request.getParameter("PARAM4");
							String param5 = request.getParameter("PARAM5");
							String SPNAME = request.getParameter("SPNAME");
							
							MCA MCACLS = new MCA();
							s1 = MCACLS.CheckReqRS(param1, param2, param3, param4, param5, SPNAME);
							
							/*
							 * ArrayList<String> Data=new ArrayList<String>(); Data = GetDBData.Call(
							 * param1,param2,param3,param4,param5, SPNAME); String URL= Data.get(0); String
							 * APIKEY= Data.get(1); String APIVRSN= Data.get(2); String TOKN= Data.get(3);
							 * String APITYP= Data.get(4);
							 */
						}
						return s1;
				}
				@RequestMapping(value={"MCAVerfyRPT"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})
				@ResponseBody
				public void MCAVerfyRPT(HttpServletRequest request, HttpServletResponse response, HttpSession session)
				  throws Exception
				{
						boolean isMultipart = ServletFileUpload.isMultipartContent(request);
						String PARAM1 = request.getParameter("PRCSID");
						String PARAM2 = request.getParameter("CINNO");
						String CINURL = "";
						String APIKEY = "";
						String APIVRSN = "";
						String TOKN = "";
						String APITYP = "";
						String fileNAME="";
						String format="";
						String retval = "";
						
						ArrayList<String> Data=new ArrayList<String>();
						Data = GetDBData.Call(PARAM1,PARAM2, "", "reports", "", "LSW_SOVRALLHNDLMCA");
						CINURL = Data.get(0);
						APIKEY= Data.get(1);
						APIVRSN= Data.get(2);
						TOKN= Data.get(4);
						APITYP= Data.get(5);
						fileNAME = "MCA_"+PARAM2+".pdf";
						format=Data.get(2);
						
						URL url = new URL(CINURL);
				        HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();
				        httpConn.setRequestProperty("x-api-key", APIKEY);
				        httpConn.setRequestProperty("x-api-version", APIVRSN);
				        httpConn.setRequestProperty("Content-Type", "application/json");
				        httpConn.setRequestProperty("cache-control", "no-cache");
				        int responseCode = httpConn.getResponseCode();
				 
				        // always check HTTP response code first
				        if (responseCode == HttpURLConnection.HTTP_OK) {
				         ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
				         byte[] chunk = new byte[4096];
				         int bytesRead;
				         InputStream stream = httpConn.getInputStream();
				         try {
				             while ((bytesRead = stream.read(chunk)) > 0) {
				                 outputStream.write(chunk, 0, bytesRead);
				             }
				         byte[] DocContent;
				         stream.close();
					     DocContent =  outputStream.toByteArray();
				         outputStream.close();
				         response.setContentLength(DocContent.length);
				         response.setHeader("Content-Disposition", "attachment; filename=" + fileNAME);
				         OutputStream outStream = response.getOutputStream();
				         outStream.write(DocContent);
				         outStream.flush();
				         outStream.close();
				       
				         } catch (IOException e) {
				        stream.close();
				        outputStream.close();
				        e.printStackTrace();
				         
				         }
				        }
				       
				}
				//MCA Check End
			
	// Customer Pages Start
	@RequestMapping(value = { "Applcnt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Applcnt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			
			 ArrayList<String> Data=new ArrayList<String>();
			
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "Applcnt";
		}

	}
	
	@RequestMapping(value = { "CoApplcnt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String CoApplcnt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
		
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));
            
			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			
			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
			request.setAttribute("MAINTABDATA", Data.get(0));
			request.setAttribute("FORMHEADING", Data.get(1));
			request.setAttribute("CONTROLDATA", Data.get(2));
			request.setAttribute("PAGETABDATA", Data.get(3));
			
			request.setAttribute("AppInfo", Data.get(4));
			request.setAttribute("SUBPAGETABDATA", Data.get(5));
			request.setAttribute("HEADERDATA", Data.get(6));
			request.setAttribute("DMY1", Data.get(7));
			request.setAttribute("DMY2", Data.get(8));
			request.setAttribute("DMY3", Data.get(9));
			request.setAttribute("DMY4", Data.get(10));
			request.setAttribute("DMY5", Data.get(11));
			request.setAttribute("DMY6", Data.get(12));
			request.setAttribute("DMY7", Data.get(13));
			
			Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
			request.setAttribute("DMY8", Data.get(0));
			request.setAttribute("DMY9", Data.get(1));
			request.setAttribute("DMY10", Data.get(2));
			request.setAttribute("DMY11", Data.get(3));
			request.setAttribute("DMY12", Data.get(4));
			request.setAttribute("DMY13", Data.get(5));
			request.setAttribute("DMY14", Data.get(6));
			request.setAttribute("DMY15", Data.get(7));
			request.setAttribute("DMY16", Data.get(8));
			request.setAttribute("DMY17", Data.get(9));
			request.setAttribute("DMY18", Data.get(10));
			request.setAttribute("DMY19", Data.get(11));
			request.setAttribute("DMY20", Data.get(12));
			request.setAttribute("DMY21", Data.get(13));
			return "CoApplcnt";
		}

	}
	
	@RequestMapping(value = { "Guantr" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Guantr(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "Guantr";
		}

	}
	
	// Customer Pages End
	
	// LoanProperty Pages Start
	
	@RequestMapping(value = { "LonDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String LonDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "LonDtls";
		}

	}
	
	@RequestMapping(value = { "PropDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String PropDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "PropDtls";
		}

	}
	
	@RequestMapping(value = { "RefDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String RefDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "RefDtls";
		}

	}
	
	// LoanProperty Pages End
	
	// PF & Bank Pages Start
	
	@RequestMapping(value = { "PFDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String PFDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "PFDtls";
		}

	}
	
	@RequestMapping(value = { "BnkDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String BnkDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "BnkDtls";
		}

	}
	
	// PF & Bank Pages End
	
	// Document Check List Start
	
	@RequestMapping(value = { "DocDtls" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String DocDtls(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "DocDtls";
		}

	}
	
	@RequestMapping(value = { "FileCheck" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String FileCheck(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			 ArrayList<String> Data=new ArrayList<String>();
				
			 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "FileCheck";
		}

	}

	
	// Document Check List End
	
	// View Reports Start
	
		@RequestMapping(value = { "ViewRpts" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String ViewRpts(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "ViewRpts";
			}

		}
		
		@RequestMapping(value = { "TechIPropeInfo" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String TechIPropeInfo(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "TechIPropeInfo";
			}

		}
		
		
		@RequestMapping(value = { "TechIIPropeInfo" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String TechIIPropeInfo(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "TechIIPropeInfo";
			}

		}
		
		@RequestMapping(value = { "LegalDetails" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String LegalDetails(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "LegalDetails";
			}

		}
		@RequestMapping(value = { "FIResidenceInfo" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String FIResidenceInfo(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "FIResidenceInfo";
			}

		}
		
		@RequestMapping(value = { "FIEmployementInfo" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String FIEmployementInfo(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "FIEmployementInfo";
			}

		}
		
		@RequestMapping(value = { "LegalUpdateReport" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String LegalUpdateReport(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "LegalUpdateReport";
			}

		}
		
		// View Reports End
		
		// Financial Start
		
		@RequestMapping(value = { "ExstLon" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String ExstLon(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "ExstLon";
			}
		}
		
		
		@RequestMapping(value = { "FincBnk" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String FincBnk(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "FincBnk";
			}

		}
		
		@RequestMapping(value = { "PropVal" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String PropVal(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "PropVal";
			}

		}
		
		@RequestMapping(value = { "Fincs" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String Fincs(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "Fincs";
			}

		}
		
		
		
		
		@RequestMapping(value = { "BusinessDetl" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String BusinessDetl(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "BusinessDetl";
			}

		}
		
		@RequestMapping(value = { "FincRto" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String FincRto(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "FincRto";
			}

		}
		// Financial End
		
		
		//Approve Start
@RequestMapping(value = { "Waiver" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String Waiver(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "Waiver";
}

}

@RequestMapping(value = { "Empwr" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String Empwr(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "Empwr";
}

}

@RequestMapping(value = { "PdDt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String PdDt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "PdDt";
}

}

@RequestMapping(value = { "ApprlNt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String ApprlNt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "ApprlNt";
}

}

@RequestMapping(value = { "Chgr" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String Chgr(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "Chgr";
}

}

@RequestMapping(value = { "ENach" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String ENach(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "ENach";
}

}
//Approve End

@RequestMapping(value = { "Appr" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String Appr(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));

request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "Appr";
}

}

//Post sanction Start
@RequestMapping(value = { "Disbrsmnt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String Disbrsmnt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "Disbrsmnt";
}

}

@RequestMapping(value = { "OpsAck" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String OpsAck(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "OpsAck";
}

}

@RequestMapping(value = { "OTC" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String OTC(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "OTC";
}

}

@RequestMapping(value = { "PDD" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String PDD(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "PDD";
}

}

@RequestMapping(value = { "DisbMemo" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String DisbMemo(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "DisbMemo";
}

}

@RequestMapping(value = { "RePay" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String RePay(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);


Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "RePay";
}

}



@RequestMapping(value = { "InsrncUpld" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String InsrncUpld(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);



Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "InsrncUpld";
}

}

//Post sanction End

@RequestMapping(value = { "CrsSel" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String CrsSel(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "CrsSel";
}

}


@RequestMapping(value = { "CrsSelProp" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String CrsSelProp(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {

request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "CrsSelProp";
}

}

///  Rpt Start

		@RequestMapping(value = { "Dedupe" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String Dedupe(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "Dedupe";
			}
		}
		
		
		@RequestMapping(value = { "Cibil" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String Cibil(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "Cibil";
			}
		}
		
		
		
		@RequestMapping(value = { "Repts" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String Repts(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "Repts";
			}
		}
		
		
		/// Rpt End 
	
	//  DOCUMENT UPLOAD
		
		@RequestMapping(value = { "DocUpload" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String DocUpload(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "DocUpload";
			}
		}
		
		
		@RequestMapping(value = { "DefrMnt" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String DefrMnt(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "DefrMnt";
			}

		}
		
		
		
		//Manage Lead Strt
		@RequestMapping(value = { "ManageLead" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String ManageLead(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
				

				 ArrayList<String> Data=new ArrayList<String>();
					
					Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTMYAPPL");
					
					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", "LEAD GENERATION");
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "ManageLead";
			}
		}
		//Manage Lead End
		
		
		
		
		@RequestMapping(value={"/ExcelDwnld"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})
		  @ResponseBody
		  public void ExcelDwnld(HttpServletRequest request, HttpServletResponse response,HttpSession session
				  )
		    throws Exception
		  {
			//ExcelDwnld getdata = new ExcelDwnld();
		    String param1 = request.getParameter("param1");
		    String param2 = request.getParameter("param2");
		    String param3 = request.getParameter("param3");
		    String param4 = request.getParameter("param4");
		    String param5 = request.getParameter("param5");
		    String param6 = request.getParameter("param6");
		    String param7 = request.getParameter("param7");
		    String param8 = request.getParameter("param8");
		    String spname = request.getParameter("spname");
		    String FName = request.getParameter("FName");
		    String FExtsn = request.getParameter("FExtsn");
		    String DBSrc = request.getParameter("DBSrc");
		   
		 
		   
		    
				DecimalFormat df2 = new DecimalFormat(".##");
				
				double valueF;
				
				TimeZone TIME_ZONE = null;
				DBSrc=null;
				ByteArrayInputStream excelStream = null;
				byte[] file = null;
				ByteArrayOutputStream outByteStream=null;
				Connection connection =null;
				PreparedStatement proc_stmt=null;
				ResultSet resultSet=null;
		try
		{
				if(connection==null) {
					connection= DBConnection.getConnection(DBSrc);
				}

				System.out.println("Executing SP...");
				proc_stmt = connection.prepareStatement("{ call " + spname + "(?,?,?,?,?,?,?,?) }");

				proc_stmt.setString(1, param1);
				proc_stmt.setString(2, param2);
				proc_stmt.setString(3, param3);
				proc_stmt.setString(4, param4);
				proc_stmt.setString(5, param5);
				proc_stmt.setString(6, param6);
				proc_stmt.setString(7, param7);
				proc_stmt.setString(8, param8);
				
				resultSet = proc_stmt.executeQuery();

				ResultSetMetaData rsmd = resultSet.getMetaData();
				//int colCount = rsmd.getColumnCount();
				
				
				//ResultSet resultSet = null;
					
				System.out.println("SP Executed...");
				// Start -- Enable in future
				
				SXSSFWorkbook  wb = new SXSSFWorkbook();
				wb.setCompressTempFiles(true);
				
				SXSSFSheet personSheet = (SXSSFSheet) wb.createSheet("Sheet1");  //.createSheet("SAMPLE");
				
				Row headerRow = personSheet.createRow(0);
				Cell nameHeaderCell = headerRow.createCell(0);
				Cell addressHeaderCell = headerRow.createCell(1);

				 CellStyle style = wb.createCellStyle();
	             style.setFillForegroundColor(HSSFColor.RED.index);
	             style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
				int i,j,type;
				String chk;
				
				
				 int colCount = rsmd.getColumnCount();
				 for (i = 1; i <= colCount; i++)
                 {
                 chk= rsmd.getColumnName(i);
                 
                 
                 //headerCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);

                 //style.setFillPattern(FillPatternType.BIG_SPOTS);
                 headerRow.createCell(i-1);
                 
                 
                 if(chk.contains("***")==true)
                 {
                  headerRow.getCell(i-1).setCellStyle(style);
                 chk=chk.replace("***", "");
                 headerRow.getCell(i-1).setCellValue(chk);
                 }
                 else
                 {
                 headerRow.getCell(i-1).setCellValue(chk);  
                 }
                 
                 }

		    
				System.out.println("Header Row Created...");
			j=1;
			while(resultSet.next())
			{
				headerRow = personSheet.createRow(j);
		    	for (i = 1; i <= colCount; i++)
		    	{
		    		type = rsmd.getColumnType(i);
		    		
		    		valueF=0;
		    		if (type == Types.NUMERIC)
		    		{
		    			valueF = Math.round(resultSet.getDouble(i)*100.00);
		    			valueF=valueF/100;
		    			headerRow.createCell(i-1).setCellValue(valueF);
		    		}
		    		else if (type == Types.VARCHAR)
		    		{
		    		
		    			headerRow.createCell(i-1).setCellValue(resultSet.getString(i));
		    		}
		    		else if (type == Types.CHAR)
		    		{
		    		
		    			headerRow.createCell(i-1).setCellValue(resultSet.getString(i));
		    		}
		    		else if (type == Types.INTEGER)
		    		{
		    		
		    			headerRow.createCell(i-1).setCellValue(resultSet.getInt(i));
		    		}
		    		else if(type == 93)
		    		{
		    			
		    			
		    			Timestamp timestamp = resultSet.getTimestamp(i);
		    			if (timestamp != null)
		    				headerRow.createCell(i-1).setCellValue(new java.util.Date(timestamp.getDate()));

		    		}

		    	}
		    	if(j%100==0)    	
		    		System.out.println("Rows Bind : "+j);
		    	
		    	
		    	//System.out.println("Rows Bind : "+j);
		    	
		    	j++;	
		    	
			}

				FName=FName+"."+FExtsn;
				
				  String contentType = null;

			        if (FName.endsWith("xlsx")) {
			            contentType = "application/octet-stream";
			        } else if (FName.endsWith("pdf")) {
			            contentType = "application/pdf";
			        } else {
			            throw new RuntimeException("File type not found");
			        }
			        
			        
			        outByteStream = new ByteArrayOutputStream();
			        wb.write(outByteStream);
			         excelStream = new ByteArrayInputStream(outByteStream.toByteArray());
			      
			       file = outByteStream.toByteArray();
			       
			 	   response.setHeader("Content-Disposition", "attachment; filename=" + FName);

				   OutputStream outStream = response.getOutputStream();

				   outStream.write(file);

				   outStream.flush();

				   outStream.close();
			    	
			    			    
			       outByteStream.close();
			     
			}
			catch(Exception ex){
				System.out.println("Exception in Excel Download");
				ex.printStackTrace();	
			}
			finally
			{
				//DBConnection.closeConnectionCall(connection, proc_stmt, resultSet);
				proc_stmt.close();
				connection.commit();
				resultSet.close();            
		         connection.close();
			}
		    	
		    	
		    
		  }
		
		

@RequestMapping(value = { "MnagQuery" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String MnagQuery(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"),request.getParameter("PrMs8"),"LSW_SFORMTABCONTQ");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "MnagQuery";
}

}

@RequestMapping(value = { "MnagQuerySrch" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
public String MnagQuerySrch(Locale locale, Model model, HttpSession session, HttpServletRequest request,
HttpServletResponse response) {
logger.info("Welcome home! The client locale is {}.", locale);

Object time = session.getAttribute("LogSession");
if (time == null) {
return "redirect:";
} else {
request.setAttribute("User", session.getAttribute("UsrSession"));
request.setAttribute("PrcsID", request.getParameter("PrcsID"));
request.setAttribute("ActvID", request.getParameter("ActvID"));
request.setAttribute("Action", request.getParameter("Action"));
request.setAttribute("WFURL", request.getParameter("WFURL"));

request.setAttribute("FormAction", request.getParameter("FormAction"));
request.setAttribute("FormName", request.getParameter("FormName"));
request.setAttribute("FormColor", request.getParameter("FormColor"));

request.setAttribute("PrMs1", request.getParameter("PrMs1"));
request.setAttribute("PrMs2", request.getParameter("PrMs2"));
request.setAttribute("PrMs3", request.getParameter("PrMs3"));
request.setAttribute("PrMs4", request.getParameter("PrMs4"));
request.setAttribute("PrMs5", request.getParameter("PrMs5"));
request.setAttribute("PrMs6", request.getParameter("PrMs6"));
request.setAttribute("PrMs7", request.getParameter("PrMs7"));
request.setAttribute("PrMs8", request.getParameter("PrMs8"));
request.setAttribute("PrMs9", request.getParameter("PrMs9"));
request.setAttribute("PrMs10", request.getParameter("PrMs10"));

request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

ArrayList<String> Data=new ArrayList<String>();

Data = GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONT");


request.setAttribute("MAINTABDATA", Data.get(0));
request.setAttribute("FORMHEADING", Data.get(1));
request.setAttribute("CONTROLDATA", Data.get(2));
request.setAttribute("PAGETABDATA", Data.get(3));

request.setAttribute("AppInfo", Data.get(4));
request.setAttribute("SUBPAGETABDATA", Data.get(5));
request.setAttribute("HEADERDATA", Data.get(6));
request.setAttribute("DMY1", Data.get(7));
request.setAttribute("DMY2", Data.get(8));
request.setAttribute("DMY3", Data.get(9));
request.setAttribute("DMY4", Data.get(10));
request.setAttribute("DMY5", Data.get(11));
request.setAttribute("DMY6", Data.get(12));
request.setAttribute("DMY7", Data.get(13));

Data = GetDBData.Call(session.getAttribute("UsrSession").toString(),"", "", "", "", "LSW_SGETQUERYZONE");
request.setAttribute("ZONE", Data.get(0));
request.setAttribute("REGION", Data.get(1));
request.setAttribute("AREA", Data.get(2));
request.setAttribute("BRANCH", Data.get(3));

Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
request.setAttribute("DMY8", Data.get(0));
request.setAttribute("DMY9", Data.get(1));
request.setAttribute("DMY10", Data.get(2));
request.setAttribute("DMY11", Data.get(3));
request.setAttribute("DMY12", Data.get(4));
request.setAttribute("DMY13", Data.get(5));
request.setAttribute("DMY14", Data.get(6));
request.setAttribute("DMY15", Data.get(7));
request.setAttribute("DMY16", Data.get(8));
request.setAttribute("DMY17", Data.get(9));
request.setAttribute("DMY18", Data.get(10));
request.setAttribute("DMY19", Data.get(11));
request.setAttribute("DMY20", Data.get(12));
request.setAttribute("DMY21", Data.get(13));
return "MnagQuerySrch";
}

}
		
	// API'S
	

//WF Activity Initiation Start

@RequestMapping(value = { "WFACTVINIT" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String WFACTVINIT(Locale locale, Model model, HttpSession session, HttpServletRequest request,
		HttpServletResponse response) {
	logger.info("Welcome home! The client locale is {}.", locale);

	
	
	Object time = session.getAttribute("LogSession");
	if (time == null) {
		return "redirect:";
	} else {
		
		String Response="";
		String ProcessID="";
		String ActivityID="";
		String http = request.getHeader("Origin");
		String Referer = request.getHeader("Referer");
		
		Response	= WFCall.WFActvInit(request.getParameter("ACTVID"),request.getParameter("WDATA"),session.getAttribute("UsrSession").toString(),session.getAttribute("CPMSession").toString(), "", request.getParameter("SNAME"));
		
		String Reponse[] = Response.split("~");

		ProcessID = Reponse[0];
		ActivityID = Reponse[1];
		
		
		if (!ProcessID.equals("completed"))
		{
		//ArrayList<String> Data=new ArrayList<String>();
		
		//Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");
		
		Response = ProcessID+"~"+ActivityID+"~"+"";
		}
		else
		{
			Response = ProcessID+"~"+ActivityID+"~"+"";
		}
	

		return Response;
	}

}
// WF Activity Initiation End	
	// WF Initiation Start
	
	@RequestMapping(value = { "WFINIT" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String WFINIT(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			String Response="";
			String ProcessID="";
			String ActivityID="";
			String http = request.getHeader("Origin");
			String Referer = request.getHeader("Referer");
			
			Response	= WFCall.WFInit(session.getAttribute("UsrSession").toString(),session.getAttribute("CPMSession").toString(), http, Referer, "", "LSW_SWFINITCALL");
			
			String Reponse[] = Response.split("~");

			ProcessID = Reponse[0];
			ActivityID = Reponse[1];
			
			
			if (!ProcessID.equals("No Data"))
			{
			ArrayList<String> Data=new ArrayList<String>();
			
			Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");
			
			Response = "Workflow Initiated~"+ProcessID+"~"+ActivityID;
			}
			else
			{
				Response = "Workflow Initiation Failed~No Data~No Data";
			}
		

			return Response;
		}

	}
	// WF Initiation End
	
	
	// DIR INS Start
	@RequestMapping(value = { "DIRINS" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String DIRINS(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);
			     	
				Object time = session.getAttribute("LogSession");				
				if (time == null) {
				return "redirect:";
				} else {
					String Response="";
					String SP=request.getParameter("SP");
					String ID=request.getParameter("ID");				
				ArrayList<String> Data=new ArrayList<String>();
				Data	= GetDBData.Call(ID,request.getParameter("XML"),"", "", "",SP);
				Response = "Success";
				return Response;
			}
		}
		// DIR INS End
	
	
	// WF Complete Start
	
		@RequestMapping(value = { "WFCOMPLETE" }, method = {
				org.springframework.web.bind.annotation.RequestMethod.POST })
		@ResponseBody
		public String WFCOMPLETE(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				String Response="";
				String ProcessID="";
				String ActivityID="";
				String http = request.getHeader("Origin");
				String Referer = request.getHeader("Referer");
				
				Response	= WFCall.WFComplete(request.getParameter("ACTVID"),request.getParameter("WDATA"),session.getAttribute("UsrSession").toString(),session.getAttribute("CPMSession").toString(), "", request.getParameter("SNAME"));
				
				String Reponse[] = Response.split("~");

				ProcessID = Reponse[0];
				ActivityID = Reponse[1];
				
				
				if (!ProcessID.equals("completed"))
				{
				//ArrayList<String> Data=new ArrayList<String>();
				
				//Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");
				
				Response = ProcessID+"~"+ActivityID+"~"+"";
				}
				else
				{
					Response = ProcessID+"~"+ActivityID+"~"+"";
				}
			

				return Response;
			}

		}
		// WF Complete End
		
		// WF Activity Initiation Start
		
				@RequestMapping(value = { "WFVNDACTVINIT" }, method = {
						org.springframework.web.bind.annotation.RequestMethod.POST })
				@ResponseBody
				public String WFVNDACTVINIT(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						String Response="";
						String ProcessID="";
						String ActivityID="";
						String http = request.getHeader("Origin");
						String Referer = request.getHeader("Referer");
						
						Response	= WFCall.WFVndActvInit(request.getParameter("ACTVID"),request.getParameter("WDATA"),session.getAttribute("UsrSession").toString(),session.getAttribute("CPMSession").toString(), "", request.getParameter("SNAME"));
						
						String Reponse[] = Response.split("~");

						ProcessID = Reponse[0];
						ActivityID = Reponse[1];
						
						
						if (!ProcessID.equals("completed"))
						{
						//ArrayList<String> Data=new ArrayList<String>();
						
						//Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");
						
						Response = ProcessID+"~"+ActivityID+"~"+"";
						}
						else
						{
							Response = ProcessID+"~"+ActivityID+"~"+"";
						}
					

						return Response;
					}

				}
				// WF Activity Initiation End
			
				// WF Activity Reevaluate
				
				@RequestMapping(value = { "WFReevaluate" }, method = {
						org.springframework.web.bind.annotation.RequestMethod.POST })
				@ResponseBody
				public String WFReevaluate(Locale locale, Model model, HttpSession session, HttpServletRequest request,
						HttpServletResponse response) {
					logger.info("Welcome home! The client locale is {}.", locale);

					
					
					Object time = session.getAttribute("LogSession");
					if (time == null) {
						return "redirect:";
					} else {
						
						String Response="";
						String ProcessID="";
						String ActivityID="";
						String http = request.getHeader("Origin");
						String Referer = request.getHeader("Referer");
						
						Response	= WFCall.WFReevaluate(request.getParameter("ACTVID"),request.getParameter("WDATA"),session.getAttribute("UsrSession").toString(),session.getAttribute("CPMSession").toString(), "", request.getParameter("SNAME"));
						
						String Reponse[] = Response.split("~");

						ProcessID = Reponse[0];
						ActivityID = Reponse[1];
						
						
						if (!ProcessID.equals("completed"))
						{
						//ArrayList<String> Data=new ArrayList<String>();
						
						//Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");
						
						Response = ProcessID+"~"+ActivityID+"~"+"";
						}
						else
						{
							Response = ProcessID+"~"+ActivityID+"~"+"";
						}
					

						return Response;
					}

				}
				// WF Activity Reevaluate End	
	
	@RequestMapping(value = { "RegisterInvoice" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String RegisterInvoice(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "RegisterInvoice";
		}

	}

	@RequestMapping(value = { "POIssuance" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String POIssuance(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			return "POIssuance";
		}

	}

	@RequestMapping(value = { "ClickToPay" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String ClickToPay(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			return "ClickToPay";
		}
	}

	@RequestMapping(value = { "RepaymentRD" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String RepaymentRD(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			return "RepaymentRD";
		}
	}

	@RequestMapping(value = { "InvoiceAcceptance" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String InvoiceAcceptance(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "InvoiceAcceptance";
		}

	}

	@RequestMapping(value = { "POAcceptance" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String POAcceptance(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "POAcceptance";
		}

	}

	@RequestMapping(value = { "FinanceRequest" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String FinanceRequest(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "FinanceRequest";
		}

	}
	
	//LEADINS STRT
	@RequestMapping(value = { "/LeadINS" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String LeadINS(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String param1 = request.getParameter("LEADCR");
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( param1,"INS","","","", "LSW_SLEADAPIINS");
		String retval = Data.get(0);
		// return retval;
		return retval;
	}
	//LEADINS END
	//LEAD STATUS STRT
	@RequestMapping(value = { "/LeadSTATUS" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String LeadSTATUS(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String param1 = request.getParameter("LEADSEARCH");
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( param1,"STATUS","","","", "LSW_SLEADAPIINS");
		String retval = Data.get(0);
		// return retval;
		return retval;
	}
	//LEAD STATUS END

	//EMAIL VERIDICATION STRT
	@RequestMapping(value = { "/EmailVerfy" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String EmailVerfy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
			Object time = session.getAttribute("LogSession");
			if (time == null) {
			return "redirect:";
			} else {
				
				
			String param1 = request.getParameter("URL");
			String param2 = request.getParameter("PRCSID");
			String param3 = request.getParameter("CUSID");
			String param4 = request.getParameter("MAILID");
			String param5 = request.getParameter("PARAM5");
			ArrayList<String> Data=new ArrayList<String>();
			Data = GetDBData.Call( param1,param2,param3,param4,param5, "LSW_SFRMMAILOTP");
			String RPTURL = Data.get(0);
			String CC = Data.get(1);
			String BCC = Data.get(2);
			String subject = Data.get(3);
			String fromId = Data.get(4);
			String password = Data.get(5);
			String host = Data.get(6);
			String port = Data.get(7);
			String ERR_FLG = Data.get(8);
			String ERR_MSG = Data.get(9);
			String TOMAIL = Data.get(10);
			String retval="";



					
			
			if(ERR_FLG.toString().equals("N")) {
				
							
			MailSendWthAttchRPTBdy MS = new MailSendWthAttchRPTBdy();
			String s1 = MS.Send(fromId, password, TOMAIL, CC, BCC, subject, RPTURL, host+"|"+port, "", "");

			return s1;
			}
			else {
			retval=ERR_MSG;
			}
			// return retval;
			//MailSendWthAttchRPTBdy
			return retval;
			}
			}
	@RequestMapping(value = { "MailVerfy" }, method = {
	org.springframework.web.bind.annotation.RequestMethod.GET })
	public String MailVerfy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
	throws Exception {


	String url = request.getScheme() + "://" +   // "http" + "://
	           request.getServerName() +       // "myhost"
	           ":" +                           // ":"
	           request.getServerPort() +       // "8080"
	           request.getRequestURI() +       // "/people"
	           "?" +                           // "?"
	           request.getQueryString();
	String Param1="",Param2 ="",Param3="",Param4="",Param5="";
	try {
	  Pattern p = Pattern.compile("VERIFICATION=([^&]+)");
	  Matcher m = p.matcher(url);
	  while (m.find()) {
	   Param1=m.group();
	  }
	  Param1=Param1.replace("VERIFICATION=", "");
	  p = Pattern.compile("ID1=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param2=m.group();
	  }
	  Param2=Param2.replace("ID1=", "");
	  p = Pattern.compile("ID2=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param3=m.group();
	  }
	  Param3=Param3.replace("ID2=", "");
	  p = Pattern.compile("ID3=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param4=m.group();
	  }
	  Param4=Param4.replace("ID3=", "");
	  ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( Param1,Param2,Param3,Param4,Param5, "LSW_SVERFYMAILOTP");
		String RPTURL = Data.get(0);
		request.setAttribute("RPTURL", Data.get(0));
		} catch (PatternSyntaxException ex) {
		  // error handling
		}
		
		
		return "Interface/EmailVerify";
		
		}

	//EMAIL VERIDICATION STRT


	@RequestMapping(value = { "FinanceRequestView" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String FinanceRequestView(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "FinanceRequestView";
		}

	}

	@RequestMapping(value = { "POAcceptanceA" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String POAcceptanceA(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "POAcceptanceA";
		}

	}

	@RequestMapping(value = { "POAcceptanceV" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String POAcceptanceV(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "POAcceptanceV";
		}

	}

	@RequestMapping(value = { "InvoiceAcceptanceA" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String InvoiceAcceptanceA(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "InvoiceAcceptanceA";
		}

	}

	@RequestMapping(value = { "InvoiceAcceptanceV" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String InvoiceAcceptanceV(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "InvoiceAcceptanceV";
		}

	}

	@RequestMapping(value = { "Inbox" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Inbox(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "Inbox";
		}

	}

	@RequestMapping(value = { "View" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String View(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "View";
		}

	}

	@RequestMapping(value = { "WfConfig" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String WfConfig(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "WfConfig";
		}

	}

	@RequestMapping(value = { "UsrConfig" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String UsrConfig(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "UsrConfig";
		}

	}

	@RequestMapping(value = { "Profile" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Profile(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "Profile";
		}

	}

	@RequestMapping(value = { "CompConfig" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String CompConfig(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "CompConfig";
		}

	}

	@RequestMapping(value = { "TransactionQuery" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String TransactionQuery(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "TransactionQuery";
		}

	}

	@RequestMapping(value = { "Reports" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Reports(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

			return "Reports";
		}

	}
	
	@RequestMapping(value = { "CONFIG" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String CONFIGURATION(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "CONFIGURATION";
		}
	}
	
	
	@RequestMapping(value = { "IFSCMaster" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String IFSCMaster(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "IFSCMaster";
		}
	}

	
	//Reference Link  start
	
		@RequestMapping(value = { "Referlink" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
		public String Referlink(Locale locale, Model model, HttpSession session, HttpServletRequest request,
				HttpServletResponse response) {
			logger.info("Welcome home! The client locale is {}.", locale);

			
			
			Object time = session.getAttribute("LogSession");
			if (time == null) {
				return "redirect:";
			} else {
				
				request.setAttribute("User", session.getAttribute("UsrSession"));
				request.setAttribute("PrcsID", request.getParameter("PrcsID"));
				request.setAttribute("ActvID", request.getParameter("ActvID"));
				request.setAttribute("Action", request.getParameter("Action"));
				request.setAttribute("WFURL", request.getParameter("WFURL"));

				request.setAttribute("FormAction", request.getParameter("FormAction"));
				request.setAttribute("FormName", request.getParameter("FormName"));
				request.setAttribute("FormColor", request.getParameter("FormColor"));

				request.setAttribute("PrMs1", request.getParameter("PrMs1"));
				request.setAttribute("PrMs2", request.getParameter("PrMs2"));
				request.setAttribute("PrMs3", request.getParameter("PrMs3"));
				request.setAttribute("PrMs4", request.getParameter("PrMs4"));
				request.setAttribute("PrMs5", request.getParameter("PrMs5"));
				request.setAttribute("PrMs6", request.getParameter("PrMs6"));
				request.setAttribute("PrMs7", request.getParameter("PrMs7"));
				request.setAttribute("PrMs8", request.getParameter("PrMs8"));
				request.setAttribute("PrMs9", request.getParameter("PrMs9"));
				request.setAttribute("PrMs10", request.getParameter("PrMs10"));

				request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

				 ArrayList<String> Data=new ArrayList<String>();
					
				 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

					
					request.setAttribute("MAINTABDATA", Data.get(0));
					request.setAttribute("FORMHEADING", Data.get(1));
					request.setAttribute("CONTROLDATA", Data.get(2));
					request.setAttribute("PAGETABDATA", Data.get(3));
					
					request.setAttribute("AppInfo", Data.get(4));
					request.setAttribute("SUBPAGETABDATA", Data.get(5));
					request.setAttribute("HEADERDATA", Data.get(6));
					request.setAttribute("DMY1", Data.get(7));
					request.setAttribute("DMY2", Data.get(8));
					request.setAttribute("DMY3", Data.get(9));
					request.setAttribute("DMY4", Data.get(10));
					request.setAttribute("DMY5", Data.get(11));
					request.setAttribute("DMY6", Data.get(12));
					request.setAttribute("DMY7", Data.get(13));
					
					Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
					request.setAttribute("DMY8", Data.get(0));
					request.setAttribute("DMY9", Data.get(1));
					request.setAttribute("DMY10", Data.get(2));
					request.setAttribute("DMY11", Data.get(3));
					request.setAttribute("DMY12", Data.get(4));
					request.setAttribute("DMY13", Data.get(5));
					request.setAttribute("DMY14", Data.get(6));
					request.setAttribute("DMY15", Data.get(7));
					request.setAttribute("DMY16", Data.get(8));
					request.setAttribute("DMY17", Data.get(9));
					request.setAttribute("DMY18", Data.get(10));
					request.setAttribute("DMY19", Data.get(11));
					request.setAttribute("DMY20", Data.get(12));
					request.setAttribute("DMY21", Data.get(13));
				return "Referlink";
			}

		}	
		
		
		//end Reference link end
		
	
	@RequestMapping(value = { "PINMaster" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String PINMaster(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			
			request.setAttribute("User", session.getAttribute("UsrSession"));
			request.setAttribute("PrcsID", request.getParameter("PrcsID"));
			request.setAttribute("ActvID", request.getParameter("ActvID"));
			request.setAttribute("Action", request.getParameter("Action"));
			request.setAttribute("WFURL", request.getParameter("WFURL"));

			request.setAttribute("FormAction", request.getParameter("FormAction"));
			request.setAttribute("FormName", request.getParameter("FormName"));
			request.setAttribute("FormColor", request.getParameter("FormColor"));

			request.setAttribute("PrMs1", request.getParameter("PrMs1"));
			request.setAttribute("PrMs2", request.getParameter("PrMs2"));
			request.setAttribute("PrMs3", request.getParameter("PrMs3"));
			request.setAttribute("PrMs4", request.getParameter("PrMs4"));
			request.setAttribute("PrMs5", request.getParameter("PrMs5"));
			request.setAttribute("PrMs6", request.getParameter("PrMs6"));
			request.setAttribute("PrMs7", request.getParameter("PrMs7"));
			request.setAttribute("PrMs8", request.getParameter("PrMs8"));
			request.setAttribute("PrMs9", request.getParameter("PrMs9"));
			request.setAttribute("PrMs10", request.getParameter("PrMs10"));

			request.setAttribute("CpmCd", session.getAttribute("CPMSession"));
			

			 ArrayList<String> Data=new ArrayList<String>();
				
				Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
				
				
				request.setAttribute("MAINTABDATA", Data.get(0));
				request.setAttribute("FORMHEADING", Data.get(1));
				request.setAttribute("CONTROLDATA", Data.get(2));
				request.setAttribute("PAGETABDATA", Data.get(3));
				
				request.setAttribute("AppInfo", Data.get(4));
				request.setAttribute("SUBPAGETABDATA", Data.get(5));
				request.setAttribute("HEADERDATA", Data.get(6));
				request.setAttribute("DMY1", Data.get(7));
				request.setAttribute("DMY2", Data.get(8));
				request.setAttribute("DMY3", Data.get(9));
				request.setAttribute("DMY4", Data.get(10));
				request.setAttribute("DMY5", Data.get(11));
				request.setAttribute("DMY6", Data.get(12));
				request.setAttribute("DMY7", Data.get(13));
				
				Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
				request.setAttribute("DMY8", Data.get(0));
				request.setAttribute("DMY9", Data.get(1));
				request.setAttribute("DMY10", Data.get(2));
				request.setAttribute("DMY11", Data.get(3));
				request.setAttribute("DMY12", Data.get(4));
				request.setAttribute("DMY13", Data.get(5));
				request.setAttribute("DMY14", Data.get(6));
				request.setAttribute("DMY15", Data.get(7));
				request.setAttribute("DMY16", Data.get(8));
				request.setAttribute("DMY17", Data.get(9));
				request.setAttribute("DMY18", Data.get(10));
				request.setAttribute("DMY19", Data.get(11));
				request.setAttribute("DMY20", Data.get(12));
				request.setAttribute("DMY21", Data.get(13));
			return "PINMaster";
		}
	}
	// DirEmployment Start	
			@RequestMapping(value = { "DirDepartment" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			public String DirDepartment(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

				
				
				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					
					request.setAttribute("User", session.getAttribute("UsrSession"));
					request.setAttribute("PrcsID", request.getParameter("PrcsID"));
					request.setAttribute("ActvID", request.getParameter("ActvID"));
					request.setAttribute("Action", request.getParameter("Action"));
					request.setAttribute("WFURL", request.getParameter("WFURL"));

					request.setAttribute("FormAction", request.getParameter("FormAction"));
					request.setAttribute("FormName", request.getParameter("FormName"));
					request.setAttribute("FormColor", request.getParameter("FormColor"));

					request.setAttribute("PrMs1", request.getParameter("PrMs1"));
					request.setAttribute("PrMs2", request.getParameter("PrMs2"));
					request.setAttribute("PrMs3", request.getParameter("PrMs3"));
					request.setAttribute("PrMs4", request.getParameter("PrMs4"));
					request.setAttribute("PrMs5", request.getParameter("PrMs5"));
					request.setAttribute("PrMs6", request.getParameter("PrMs6"));
					request.setAttribute("PrMs7", request.getParameter("PrMs7"));
					request.setAttribute("PrMs8", request.getParameter("PrMs8"));
					request.setAttribute("PrMs9", request.getParameter("PrMs9"));
					request.setAttribute("PrMs10", request.getParameter("PrMs10"));

					request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

					 ArrayList<String> Data=new ArrayList<String>();
						
						Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
						
						
						request.setAttribute("MAINTABDATA", Data.get(0));
						request.setAttribute("FORMHEADING", Data.get(1));
						request.setAttribute("CONTROLDATA", Data.get(2));
						request.setAttribute("PAGETABDATA", Data.get(3));
						
						request.setAttribute("AppInfo", Data.get(4));
						request.setAttribute("SUBPAGETABDATA", Data.get(5));
						request.setAttribute("HEADERDATA", Data.get(6));
						request.setAttribute("DMY1", Data.get(7));
						request.setAttribute("DMY2", Data.get(8));
						request.setAttribute("DMY3", Data.get(9));
						request.setAttribute("DMY4", Data.get(10));
						request.setAttribute("DMY5", Data.get(11));
						request.setAttribute("DMY6", Data.get(12));
						request.setAttribute("DMY7", Data.get(13));
						
						Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
						request.setAttribute("DMY8", Data.get(0));
						request.setAttribute("DMY9", Data.get(1));
						request.setAttribute("DMY10", Data.get(2));
						request.setAttribute("DMY11", Data.get(3));
						request.setAttribute("DMY12", Data.get(4));
						request.setAttribute("DMY13", Data.get(5));
						request.setAttribute("DMY14", Data.get(6));
						request.setAttribute("DMY15", Data.get(7));
						request.setAttribute("DMY16", Data.get(8));
						request.setAttribute("DMY17", Data.get(9));
						request.setAttribute("DMY18", Data.get(10));
						request.setAttribute("DMY19", Data.get(11));
						request.setAttribute("DMY20", Data.get(12));
						request.setAttribute("DMY21", Data.get(13));
						
					return "DirDepartment";
				}

			}		
			
		
			// DirEmployment master Start	
			@RequestMapping(value = { "DirDepartmentMST" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			public String DirDepartmentMST(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

				
				
				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					
					request.setAttribute("User", session.getAttribute("UsrSession"));
					request.setAttribute("PrcsID", request.getParameter("PrcsID"));
					request.setAttribute("ActvID", request.getParameter("ActvID"));
					request.setAttribute("Action", request.getParameter("Action"));
					request.setAttribute("WFURL", request.getParameter("WFURL"));

					request.setAttribute("FormAction", request.getParameter("FormAction"));
					request.setAttribute("FormName", request.getParameter("FormName"));
					request.setAttribute("FormColor", request.getParameter("FormColor"));

					request.setAttribute("PrMs1", request.getParameter("PrMs1"));
					request.setAttribute("PrMs2", request.getParameter("PrMs2"));
					request.setAttribute("PrMs3", request.getParameter("PrMs3"));
					request.setAttribute("PrMs4", request.getParameter("PrMs4"));
					request.setAttribute("PrMs5", request.getParameter("PrMs5"));
					request.setAttribute("PrMs6", request.getParameter("PrMs6"));
					request.setAttribute("PrMs7", request.getParameter("PrMs7"));
					request.setAttribute("PrMs8", request.getParameter("PrMs8"));
					request.setAttribute("PrMs9", request.getParameter("PrMs9"));
					request.setAttribute("PrMs10", request.getParameter("PrMs10"));

					request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

					 ArrayList<String> Data=new ArrayList<String>();
						
						Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
						
						
						request.setAttribute("MAINTABDATA", Data.get(0));
						request.setAttribute("FORMHEADING", Data.get(1));
						request.setAttribute("CONTROLDATA", Data.get(2));
						request.setAttribute("PAGETABDATA", Data.get(3));
						
						request.setAttribute("AppInfo", Data.get(4));
						request.setAttribute("SUBPAGETABDATA", Data.get(5));
						request.setAttribute("HEADERDATA", Data.get(6));
						request.setAttribute("DMY1", Data.get(7));
						request.setAttribute("DMY2", Data.get(8));
						request.setAttribute("DMY3", Data.get(9));
						request.setAttribute("DMY4", Data.get(10));
						request.setAttribute("DMY5", Data.get(11));
						request.setAttribute("DMY6", Data.get(12));
						request.setAttribute("DMY7", Data.get(13));
						
						Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
						request.setAttribute("DMY8", Data.get(0));
						request.setAttribute("DMY9", Data.get(1));
						request.setAttribute("DMY10", Data.get(2));
						request.setAttribute("DMY11", Data.get(3));
						request.setAttribute("DMY12", Data.get(4));
						request.setAttribute("DMY13", Data.get(5));
						request.setAttribute("DMY14", Data.get(6));
						request.setAttribute("DMY15", Data.get(7));
						request.setAttribute("DMY16", Data.get(8));
						request.setAttribute("DMY17", Data.get(9));
						request.setAttribute("DMY18", Data.get(10));
						request.setAttribute("DMY19", Data.get(11));
						request.setAttribute("DMY20", Data.get(12));
						request.setAttribute("DMY21", Data.get(13));
						
					return "DirDepartmentMST";
				}

			}
			
			
			// ROLE MST Start	
			@RequestMapping(value = { "RoleMST" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			public String RoleMST(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

				
				
				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					
					request.setAttribute("User", session.getAttribute("UsrSession"));
					request.setAttribute("PrcsID", request.getParameter("PrcsID"));
					request.setAttribute("ActvID", request.getParameter("ActvID"));
					request.setAttribute("Action", request.getParameter("Action"));
					request.setAttribute("WFURL", request.getParameter("WFURL"));

					request.setAttribute("FormAction", request.getParameter("FormAction"));
					request.setAttribute("FormName", request.getParameter("FormName"));
					request.setAttribute("FormColor", request.getParameter("FormColor"));

					request.setAttribute("PrMs1", request.getParameter("PrMs1"));
					request.setAttribute("PrMs2", request.getParameter("PrMs2"));
					request.setAttribute("PrMs3", request.getParameter("PrMs3"));
					request.setAttribute("PrMs4", request.getParameter("PrMs4"));
					request.setAttribute("PrMs5", request.getParameter("PrMs5"));
					request.setAttribute("PrMs6", request.getParameter("PrMs6"));
					request.setAttribute("PrMs7", request.getParameter("PrMs7"));
					request.setAttribute("PrMs8", request.getParameter("PrMs8"));
					request.setAttribute("PrMs9", request.getParameter("PrMs9"));
					request.setAttribute("PrMs10", request.getParameter("PrMs10"));

					request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

					 ArrayList<String> Data=new ArrayList<String>();
						
					 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
						
						
						request.setAttribute("MAINTABDATA", Data.get(0));
						request.setAttribute("FORMHEADING", Data.get(1));
						request.setAttribute("CONTROLDATA", Data.get(2));
						request.setAttribute("PAGETABDATA", Data.get(3));
						
						request.setAttribute("AppInfo", Data.get(4));
						request.setAttribute("SUBPAGETABDATA", Data.get(5));
						request.setAttribute("HEADERDATA", Data.get(6));
						request.setAttribute("DMY1", Data.get(7));
						request.setAttribute("DMY2", Data.get(8));
						request.setAttribute("DMY3", Data.get(9));
						request.setAttribute("DMY4", Data.get(10));
						request.setAttribute("DMY5", Data.get(11));
						request.setAttribute("DMY6", Data.get(12));
						request.setAttribute("DMY7", Data.get(13));
						
						Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
						request.setAttribute("DMY8", Data.get(0));
						request.setAttribute("DMY9", Data.get(1));
						request.setAttribute("DMY10", Data.get(2));
						request.setAttribute("DMY11", Data.get(3));
						request.setAttribute("DMY12", Data.get(4));
						request.setAttribute("DMY13", Data.get(5));
						request.setAttribute("DMY14", Data.get(6));
						request.setAttribute("DMY15", Data.get(7));
						request.setAttribute("DMY16", Data.get(8));
						request.setAttribute("DMY17", Data.get(9));
						request.setAttribute("DMY18", Data.get(10));
						request.setAttribute("DMY19", Data.get(11));
						request.setAttribute("DMY20", Data.get(12));
						request.setAttribute("DMY21", Data.get(13));
						
					return "RoleMST";
				}

			}		
			
			//start Document templates View
			
			@RequestMapping(value = { "DoctemplView" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			public String DoctemplView(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

				
				
				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					
					request.setAttribute("User", session.getAttribute("UsrSession"));
					request.setAttribute("PrcsID", request.getParameter("PrcsID"));
					request.setAttribute("ActvID", request.getParameter("ActvID"));
					request.setAttribute("Action", request.getParameter("Action"));
					request.setAttribute("WFURL", request.getParameter("WFURL"));

					request.setAttribute("FormAction", request.getParameter("FormAction"));
					request.setAttribute("FormName", request.getParameter("FormName"));
					request.setAttribute("FormColor", request.getParameter("FormColor"));

					request.setAttribute("PrMs1", request.getParameter("PrMs1"));
					request.setAttribute("PrMs2", request.getParameter("PrMs2"));
					request.setAttribute("PrMs3", request.getParameter("PrMs3"));
					request.setAttribute("PrMs4", request.getParameter("PrMs4"));
					request.setAttribute("PrMs5", request.getParameter("PrMs5"));
					request.setAttribute("PrMs6", request.getParameter("PrMs6"));
					request.setAttribute("PrMs7", request.getParameter("PrMs7"));
					request.setAttribute("PrMs8", request.getParameter("PrMs8"));
					request.setAttribute("PrMs9", request.getParameter("PrMs9"));
					request.setAttribute("PrMs10", request.getParameter("PrMs10"));

					request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

					 ArrayList<String> Data=new ArrayList<String>();
						
					 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");

						
						request.setAttribute("MAINTABDATA", Data.get(0));
						request.setAttribute("FORMHEADING", Data.get(1));
						request.setAttribute("CONTROLDATA", Data.get(2));
						request.setAttribute("PAGETABDATA", Data.get(3));
						
						request.setAttribute("AppInfo", Data.get(4));
						request.setAttribute("SUBPAGETABDATA", Data.get(5));
						request.setAttribute("HEADERDATA", Data.get(6));
						request.setAttribute("DMY1", Data.get(7));
						request.setAttribute("DMY2", Data.get(8));
						request.setAttribute("DMY3", Data.get(9));
						request.setAttribute("DMY4", Data.get(10));
						request.setAttribute("DMY5", Data.get(11));
						request.setAttribute("DMY6", Data.get(12));
						request.setAttribute("DMY7", Data.get(13));
						
						Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'~'+request.getParameter("PrMs1")+'~'+request.getParameter("PrMs2")+'~'+request.getParameter("PrMs3")+'~'+request.getParameter("PrMs4")+'~'+request.getParameter("PrMs5")+'~'+request.getParameter("PrMs6")+'~'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
						request.setAttribute("DMY8", Data.get(0));
						request.setAttribute("DMY9", Data.get(1));
						request.setAttribute("DMY10", Data.get(2));
						request.setAttribute("DMY11", Data.get(3));
						request.setAttribute("DMY12", Data.get(4));
						request.setAttribute("DMY13", Data.get(5));
						request.setAttribute("DMY14", Data.get(6));
						request.setAttribute("DMY15", Data.get(7));
						request.setAttribute("DMY16", Data.get(8));
						request.setAttribute("DMY17", Data.get(9));
						request.setAttribute("DMY18", Data.get(10));
						request.setAttribute("DMY19", Data.get(11));
						request.setAttribute("DMY20", Data.get(12));
						request.setAttribute("DMY21", Data.get(13));
						
					return "DoctemplView";
				}

			}	
			//end Document templates  View	
			
			// ROLE Creation Start	
			@RequestMapping(value = { "Rolecreation" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			public String Rolecreation(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

				
				
				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					
					request.setAttribute("User", session.getAttribute("UsrSession"));
					request.setAttribute("PrcsID", request.getParameter("PrcsID"));
					request.setAttribute("ActvID", request.getParameter("ActvID"));
					request.setAttribute("Action", request.getParameter("Action"));
					request.setAttribute("WFURL", request.getParameter("WFURL"));

					request.setAttribute("FormAction", request.getParameter("FormAction"));
					request.setAttribute("FormName", request.getParameter("FormName"));
					request.setAttribute("FormColor", request.getParameter("FormColor"));

					request.setAttribute("PrMs1", request.getParameter("PrMs1"));
					request.setAttribute("PrMs2", request.getParameter("PrMs2"));
					request.setAttribute("PrMs3", request.getParameter("PrMs3"));
					request.setAttribute("PrMs4", request.getParameter("PrMs4"));
					request.setAttribute("PrMs5", request.getParameter("PrMs5"));
					request.setAttribute("PrMs6", request.getParameter("PrMs6"));
					request.setAttribute("PrMs7", request.getParameter("PrMs7"));
					request.setAttribute("PrMs8", request.getParameter("PrMs8"));
					request.setAttribute("PrMs9", request.getParameter("PrMs9"));
					request.setAttribute("PrMs10", request.getParameter("PrMs10"));

					request.setAttribute("CpmCd", session.getAttribute("CPMSession"));

					 ArrayList<String> Data=new ArrayList<String>();
						
					 Data	= GetDBData.Call( request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8"), "LSW_SFORMTABCONTCONFIG");
						
						
						request.setAttribute("MAINTABDATA", Data.get(0));
						request.setAttribute("FORMHEADING", Data.get(1));
						request.setAttribute("CONTROLDATA", Data.get(2));
						request.setAttribute("PAGETABDATA", Data.get(3));
						
						request.setAttribute("AppInfo", Data.get(4));
						request.setAttribute("SUBPAGETABDATA", Data.get(5));
						request.setAttribute("HEADERDATA", Data.get(6));
						request.setAttribute("DMY1", Data.get(7));
						request.setAttribute("DMY2", Data.get(8));
						request.setAttribute("DMY3", Data.get(9));
						request.setAttribute("DMY4", Data.get(10));
						request.setAttribute("DMY5", Data.get(11));
						request.setAttribute("DMY6", Data.get(12));
						request.setAttribute("DMY7", Data.get(13));
						
						Data	= GetDBData.Call(request.getParameter("ActvID")+"|"+session.getAttribute("UsrSession"),request.getParameter("PrMs10"), request.getParameter("PrcsID"), request.getParameter("PrMs9"), request.getParameter("PrMs8")+'|'+request.getParameter("PrMs1")+'|'+request.getParameter("PrMs2")+'|'+request.getParameter("PrMs3")+'|'+request.getParameter("PrMs4")+'|'+request.getParameter("PrMs5")+'|'+request.getParameter("PrMs6")+'|'+request.getParameter("PrMs7"), "LSW_SGETSIDEMENUBAR");
						request.setAttribute("DMY8", Data.get(0));
						request.setAttribute("DMY9", Data.get(1));
						request.setAttribute("DMY10", Data.get(2));
						request.setAttribute("DMY11", Data.get(3));
						request.setAttribute("DMY12", Data.get(4));
						request.setAttribute("DMY13", Data.get(5));
						request.setAttribute("DMY14", Data.get(6));
						request.setAttribute("DMY15", Data.get(7));
						request.setAttribute("DMY16", Data.get(8));
						request.setAttribute("DMY17", Data.get(9));
						request.setAttribute("DMY18", Data.get(10));
						request.setAttribute("DMY19", Data.get(11));
						request.setAttribute("DMY20", Data.get(12));
						request.setAttribute("DMY21", Data.get(13));
						
					return "Rolecreation";
				}

			}	
			
			@RequestMapping(value = {"/InsrncePrmeiumICICIISSUE"}, method = {RequestMethod.POST})
			   @ResponseBody
			   public String InsrncePrmeiumICICIISSUE(HttpServletRequest request, HttpServletResponse response) throws Exception, ClassNotFoundException {
				InsrncePrmeiumICICIISSUE InsrncePrmeiumICICIISSUE = new InsrncePrmeiumICICIISSUE();
			 	 String param1 = request.getParameter("param1");
			     String param2 = request.getParameter("param2");
			     String param3 = request.getParameter("param3");
			     String param4 = request.getParameter("param4");
			     String param5 = request.getParameter("param5");
			     String DBSrc = request.getParameter("DBSrc");
			     String spname1 = request.getParameter("spname1");
			     String spname2 = request.getParameter("spname2");
			     InsrncePrmeiumICICIISSUE.param1(param1);
			     InsrncePrmeiumICICIISSUE.param2(param2);
			     InsrncePrmeiumICICIISSUE.param3(param3);
			     InsrncePrmeiumICICIISSUE.param4(param4);
			     InsrncePrmeiumICICIISSUE.param5(param5);
			     InsrncePrmeiumICICIISSUE.spname1(spname1);
			     InsrncePrmeiumICICIISSUE.spname2(spname2);
			 	  
			 	  
			     return InsrncePrmeiumICICIISSUE.ICICInsrncePrmeium();
			   }
			
	/** Front End Portal Page Mapping End **/

	/** Front End API Mapping Start **/

	@RequestMapping(value = { "BatchUpdate" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String BatchUpdate(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String OP = "";

		try {
			UI_GetData getdata = new UI_GetData();

			String param1 = request.getParameter("param1");
			String param2 = request.getParameter("param2");
			String param3 = request.getParameter("param3");
			String param4 = request.getParameter("param4");
			String param5 = request.getParameter("param5");
			String spname = request.getParameter("spname");

			String DBSrc = request.getParameter("DBSrc");
			String Token = request.getParameter("Token");

			getdata.param1(param1);
			getdata.param2(param2);
			getdata.param3(param3);
			getdata.param4(param4);
			getdata.param5(param5);
			getdata.spname(spname);

			getdata.DBSrc(DBSrc);
			// getdata.Token(Token);

			Object time = session.getAttribute("LogSession");
			// Object Tkn = session.getAttribute("CSRFTKN");

			System.out.print("BatchUpdateCall");

			/*
			 * if (time == null) { return "redirect:"; } else {
			 */

			/*
			 * if(Token==Tkn) {
			 */
			OP = getdata.UI_GetData1();
			/*
			 * } else { return "Invalid Token"; }
			 */
			// }

		} catch (Exception e) {

			System.out.print(e);
		}

		return OP;
		// return null;
	}

	@RequestMapping(value = { "Paymentgateway" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Paymentgateway(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String OP = "";

		String UniqueID = request.getParameter("UniqueID");
		String Type = request.getParameter("Type");
		String Prvnt = request.getParameter("Prvnt");

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			OP = PaymentGW.PaymentCall(UniqueID, Type, Prvnt);

			if (OP.equals("Invalid Request")) {
				throw new ServletException("Invalid Request...");
			}
			return "redirect:" + OP;

		}

		// return null;
	}
	
	
	//SWAP    START

	@RequestMapping(value = { "SWAP" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String SWAPPING(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String CUSID = request.getParameter("CUSID");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SSWAPPINGEAPI";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, CUSID, TOKENID , "" ,"", FNname );
		String Result= Data.get(0);


		

			return Result ;

			
	}
	 

	//SWAP   END
	
	
	  @RequestMapping(value = {"/UI_GetMainTxtData"}, method = {RequestMethod.POST})
	  @ResponseBody
	  public String UI_GetMainTxtData(HttpServletRequest request, HttpServletResponse response) throws Exception {
	    UI_GetMainTxtData getdata = new UI_GetMainTxtData();
	    
	    String param1 = request.getParameter("param1");
	    String param2 = request.getParameter("param2"); 
	    String param3 = request.getParameter("param3");
	    String param4 = request.getParameter("param4");
	    String param5 = request.getParameter("param5");
	    String spname = request.getParameter("spname");
		String Token = request.getParameter("Token");
	    String DBSrc = request.getParameter("DBSrc");
	    
	    getdata.param1(param1);
	    getdata.param2(param2);
	    getdata.param3(param3);
	    getdata.param4(param4);
	    getdata.param5(param5);
	    getdata.spname(spname);
	    getdata.DBSrc(DBSrc);
	    
		
		//Object time = session.getAttribute("LogSession");
	    return getdata.UI_GetMainTxtData();
	  }

	//ANALYTICS START
	@RequestMapping(value = { "ANALYTICS" }, method = {

	       org.springframework.web.bind.annotation.RequestMethod.POST })

	@ResponseBody

	public String ANALYTICS(HttpServletRequest request, HttpServletResponse response, HttpSession session)

	         throws Exception {

	   String OP = "";

	   String status = "";

	   String Msg = "";

	   String ReceiptNo ="";

	   String FnlResp="";

	   String param1 = request.getParameter("PRCSID");

	   String param2 = request.getParameter("PFNO");

	   Object time = session.getAttribute("LogSession");

	   if (time == null)
	   {
		   
		   return "redirect:";
	   }

	   else
	   {
	         OP = ANALYTICS.AnalyticsPush(param1,param2,"","","","");
	         String Reponse[] = OP.split("~");

	         status=Reponse[0];

	         Msg=Reponse[1];

	         ReceiptNo=Reponse[2];

	         FnlResp=Reponse[3];
	         if (OP.equals("Invalid Request")) {

	                throw new ServletException("Invalid Request...");

	         }

	         return  status+ "|" + Msg + "|" + ReceiptNo + "|" + FnlResp;           

	         //return "PAYTM";
	   }
	   // return null;
	}
	//ANALYTICS END

	@RequestMapping(value = { "PaymentgatewayRes" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	public String PaymentgatewayRes(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String OP = "";

		String PGResponse = request.getParameter("msg");
		String Prvnt = request.getParameter("Prvnt");

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			OP = PaymentGW.PaymentCallRes(PGResponse, Prvnt);

			if (OP.equals("Invalid Response")) {
				throw new ServletException("Invalid Response...");
			}
			return "redirect:" + OP;

		}

		// return null;
	}

	@RequestMapping(value = { "DisbPostingCall" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String DisbPostingCall(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String OP = "";

		try {

			Properties props = new Properties();
			FileInputStream fis = null;
			FileInputStream fis1 = null;
			Connection con = null;
			String Profile = "";
			try {
				Properties prop = new Properties();

				URL songPath = DBConnection.class.getResource("");
				String[] pathArr = songPath.toString().split("file:/|/TPLSW");

				String Path = pathArr[1];
				fis = new FileInputStream(Path + "/TPLSW/WEB-INF/Config.properties");

				if (fis != null) {
					prop.load(fis);

					Profile = prop.getProperty("DisbPostingURL");

					fis.close();
				} else {
					throw new java.io.FileNotFoundException("property file '" + fis + "' not found in the classpath");
				}

			} catch (Exception e) {
				e.printStackTrace();
			}

//  HttpGet post = new HttpGet(Profile+"?param1="+Flag+"&spname=SCF_SREFinUpd");

			// jsonData = "{\"app_id\" : 8,\"app_src\" :
			// \"IVR\",\"leadid\":\"121212121\",\"Name\":\"Vineet Sharma\",\"Mobile\" :
			// \"9911773883\",\"Email\" : \"vineet.sharma@one97.net\",\"PANNo\" :
			// \"CZAPS1528P\",\"AadharNo\" : \"123456789012\",\"City\" :
			// \"Dehradun\",\"Pincode\": \"248001\",\"Industry\" :
			// \"INFRA\",\"BusinessEntityName\":\"JP
			// INFRA\",\"BusinessEntityType\":\"INFRA\",\"POS\":\"NOooo\",\"POSAvgmonthlysales\":2000000,\"LoanAmountReq\"
			// : 100000}";
			try {

				String URLBatch = Profile;

				String param1 = request.getParameter("param1");
				String param2 = request.getParameter("param2");
				String param3 = request.getParameter("param3");
				String param4 = request.getParameter("param4");
				String param5 = request.getParameter("param5");
				String spname = request.getParameter("spname");
				String spname2 = request.getParameter("spname2");
				String spname3 = request.getParameter("spname3");

				/*
				 * System.out.print("param1="+param1+"param2="+param2+"param3="+param3+"param4="
				 * +param4+"param5="
				 * +param5+"spname="+spname+"spname2="+spname2+"spname3="+spname3);
				 */

				String POST_PARAMS = "param1=" + param1 + "&param2=" + param2 + "&param3=" + param3 + "&param4="
						+ param4 + "&param5=" + param5 + "&spname=" + spname + "&spname2=" + spname2 + "&spname3="
						+ spname3;

				URL obj = new URL(URLBatch);
				HttpURLConnection con1 = (HttpURLConnection) obj.openConnection();
				con1.setRequestMethod("POST");

				// For POST only - START
				con1.setDoOutput(true);
				OutputStream os = con1.getOutputStream();
				os.write(POST_PARAMS.getBytes());
				os.flush();
				os.close();
				// For POST only - END

				// con1.setRequestProperty("User-Agent", "Mozilla/5.0");
				int responseCode = con1.getResponseCode();
				System.out.println("POST Response Code :: " + responseCode);
				if (responseCode == HttpURLConnection.HTTP_OK) { // success
					BufferedReader in = new BufferedReader(new InputStreamReader(con1.getInputStream()));
					String inputLine;
					StringBuffer response1 = new StringBuffer();

					while ((inputLine = in.readLine()) != null) {
						response1.append(inputLine);
					}
					in.close();
					OP = response1.toString();
					// print result
					System.out.println(response1.toString());
				} else {
					System.out.println("POST request not worked");
				}

			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			System.out.print("BatchPostingCall");

			/*
			 * if (time == null) { return "redirect:"; } else {
			 */

			/*
			 * if(Token==Tkn) {
			 */

			/*
			 * } else { return "Invalid Token"; }
			 */
			// }

		} catch (Exception e) {

			System.out.print(e);
		}

		return OP;
		// return null;
	}

	@RequestMapping(value = { "CorpCodeUpd" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	@ResponseBody
	public String CorpCodeUpd(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		try {
			UI_GetData getdata = new UI_GetData();

			String param1 = request.getParameter("param1");
			String param2 = request.getParameter("param2");
			String param3 = request.getParameter("param3");
			String param4 = request.getParameter("param4");
			String param5 = request.getParameter("param5");
			String spname = request.getParameter("spname");

			String DBSrc = request.getParameter("DBSrc");
			String Token = request.getParameter("Token");

			getdata.param1(param1);
			getdata.param2(param2);
			getdata.param3(param3);
			getdata.param4(param4);
			getdata.param5(param5);
			getdata.spname(spname);

			getdata.DBSrc(DBSrc);
			// getdata.Token(Token);

			Object time = session.getAttribute("LogSession");
			// Object Tkn = session.getAttribute("CSRFTKN");

			System.out.print("CorpCodeUpd");

			/*
			 * if (time == null) { return "redirect:"; } else {
			 */

			/*
			 * if(Token==Tkn) {
			 */
			return getdata.UI_GetData1();
			/*
			 * } else { return "Invalid Token"; }
			 */
			// }

		} catch (Exception e) {

			System.out.print(e);
		}
		return null;
	}

	/** Front End API Mapping End **/

	/** Front End Portal Action Mapping Start **/

	@RequestMapping(value = { "/GetNextNavAction" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String GetNextNavAction(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_GetPageURL getdata = new UI_GetPageURL();

		String MenuID = request.getParameter("MnuID");
		String PrcsID = request.getParameter("PrcsID");
		String ActvID = request.getParameter("ActvID");

		String FormAction = request.getParameter("FormAction");
		String FormName = request.getParameter("FormName");
		String FormColor = request.getParameter("FormColor");

		String PrMs1 = request.getParameter("PrMs1");
		String PrMs2 = request.getParameter("PrMs2");
		String PrMs3 = request.getParameter("PrMs3");
		String PrMs4 = request.getParameter("PrMs4");
		String PrMs5 = request.getParameter("PrMs5");
		String PrMs6 = request.getParameter("PrMs6");
		String PrMs7 = request.getParameter("PrMs7");
		String PrMs8 = request.getParameter("PrMs8");
		String PrMs9 = request.getParameter("PrMs9");
		String PrMs10 = request.getParameter("PrMs10");

		String DBSrc = request.getParameter("DBSrc");
		String Action = request.getParameter("Action");
		String spname = "SAM_SGetMenuPageURL";

		getdata.mnuid(MenuID);
		getdata.action("");
		getdata.DBSrc(DBSrc);
		getdata.spname(spname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String URLXML = getdata.UI_GetPageURL1();
			String PageURL = "";
			String WFURL = "";
			String Param = "";

			Document doc = CommonFns.convertStringToXMLDocument(URLXML);

			NodeList nodes = doc.getElementsByTagName("a");

			for (int i = 0; i < nodes.getLength(); i++) {
				Element element = (Element) nodes.item(i);

				NodeList name = element.getElementsByTagName("WFURL");
				Element line = (Element) name.item(0);
				WFURL = CommonFns.getCharacterDataFromElement(line);

				NodeList name1 = element.getElementsByTagName("PageURL");
				Element line1 = (Element) name1.item(0);
				PageURL = CommonFns.getCharacterDataFromElement(line1);

			}

			// WFURL = doc.getElementsByTagName("WFURL").toString();
			// PageURL = doc.getElementsByTagName("PageURL").toString();
			if (!WFURL.equals("")) {
				Param = "?Action=" + Action + "&PrcsID=" + PrcsID + "&ActvID=" + ActvID + "&FormAction=" + FormAction
						+ "&FormName=" + FormName + "&FormColor=" + FormColor + "&WFURL=" + WFURL + "&PrMs1=" + PrMs1
						+ "&PrMs2=" + PrMs2 + "&PrMs3=" + PrMs3 + "&PrMs4=" + PrMs4 + "&PrMs5=" + PrMs5 + "&PrMs6="
						+ PrMs6 + "&PrMs7=" + PrMs7 + "&PrMs8=" + PrMs8 + "&PrMs9=" + PrMs9 + "&PrMs10=" + PrMs10;
			} else {
				Param = "?Action=" + Action + "&PrcsID=" + PrcsID + "&ActvID=" + ActvID + "&FormAction=" + FormAction
						+ "&FormName=" + FormName + "&FormColor=" + FormColor + "&PrMs1=" + PrMs1 + "&PrMs2=" + PrMs2
						+ "&PrMs3=" + PrMs3 + "&PrMs4=" + PrMs4 + "&PrMs5=" + PrMs5 + "&PrMs6=" + PrMs6 + "&PrMs7="
						+ PrMs7 + "&PrMs8=" + PrMs8 + "&PrMs9=" + PrMs9 + "&PrMs10=" + PrMs10;
			}

			// UI_WFInit getdataWFInit = new UI_WFInit();
			// getdataWFInit.URL(WFURL);
			// String retval = getdataWFInit.UI_WFInit1();

			return "redirect:" + PageURL + Param;
		}
	}

	/** Front End Portal Action Mapping End **/

	@RequestMapping(value = { "EOD" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String EOD(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			return "EOD/SCF_fEOD";
		}
	}

	@RequestMapping(value = { "SCF_LimitSystem" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String SCF_LimitSystem(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			return "LimitSystem/LimitSystem";
		}
	}

	@RequestMapping(value = { "Treeviews" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String Treeviews(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			return "LimitSystem/TreeView/basic-example";
		}
	}

	@RequestMapping(value = { "SCF_HierTreeviews" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.GET })
	public String HierTreeviews(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			return "LimitSystem/LSW_fHierarchyTree/LSW_fHierarchyTree";
		}
	}

	@RequestMapping(value = { "AutoLogin" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String AutoLogin(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);

		return "Common/Pages/Userview/AutoLogin";
		// return "Common/Pages/Userview/AutoLogin";
	}

	//RECEIPT STATUS START

	@RequestMapping(value = { "RECEIPTSTAT" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String RECEIPTSTAT(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String APPNO = request.getParameter("APPNO");
		String RECEIPTNO = request.getParameter("RECEIPTNO");
		String TYPE = request.getParameter("TYPE");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SRECEIPTSTATUS";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( APPNO, RECEIPTNO, TYPE , TOKENID ,"", FNname );
		String Result= Data.get(0);


		

			return Result ;

			
	}


	//RECEIPT STATUS END


	//STAGE VALIDATIONS START

	@RequestMapping(value = { "STAGEVALID" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String STAGEVALID(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SCHECKPFCOLLECTION";
		String FNname1 = "LSW_SSTAGEVALIDATIONS";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, "", "" , "" ,"", FNname );
		String Result= Data.get(0);

		
		ArrayList<String> Data1=new ArrayList<String>();
		Data1 = GetDBData.Call( PRCSID, TOKENID, Result , "" ,"", FNname1 );
		String Result1= Data1.get(0);

		

			return Result1 ;

			
	}


	//STAGE VALIDATIONS END

	
	//MOBDEMAND  START

	@RequestMapping(value = { "MOBDEMAND" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MOBDEMAND(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String PROPERTY = request.getParameter("PROPERTY");
		String TOKENID = request.getParameter("TOKENID");

		
		String FNname = "LSW_TGETPROPPF";
		String FNname1 = "LSW_SMOBDEMANDAMOUNT";
		

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PROPERTY, PRCSID, "" , "" ,"", FNname );
		String Result= Data.get(0);
		String Result1= Data.get(1);

		ArrayList<String> Data1=new ArrayList<String>();
		Data1 = GetDBData.Call( PROPERTY, PRCSID, TOKENID , Result ,Result1, FNname1 );
		String FResult= Data1.get(0);
		
			return FResult ;	
			
	}


	//MOBDEMAND     END

	//LOAN INITIATION START

	@RequestMapping(value = { "LOANINITIATION" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String LOANINITIATION(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String ACTIVITYID = request.getParameter("ACTIVITYID");
		String XML = request.getParameter("XML");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_sLoanInfoSubmit";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, ACTIVITYID, XML , TOKENID ,"", FNname );
		String Result= Data.get(0);


		

			return Result ;

			
	}


	//LOAN INITIATION END
	
	
	@RequestMapping(value = { "SalesDashBoard" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	public String DashBoard(Locale locale, Model model, HttpSession session) {
		logger.info("Welcome home! The client locale is {}.", locale);

		// Date date = new java.util.Date();
		// System.out.println(date);
		//// double x = Math.random();
		//// double y = Math.random();
		//// session.setAttribute("LogSession", "SESS"+x+y);
		// session.setAttribute("CSRFTKN", "SESS"+x);
		//// System.out.println(session.getAttribute("LogSession"));

		Object time = session.getAttribute("LogSession");
		if (time == null) {

			return "redirect:";
		} else {
			return "Common/Pages/Userview/SalesDashBoard";
		}
	}
	
	
	//PATYM CRED   START
	
			@RequestMapping(value = { "PAYTMCRED" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			@ResponseBody
			public String PAYTMCRED(HttpServletRequest request, HttpServletResponse response)
					throws Exception, ClassNotFoundException {
				
				
				String FNname = "LSW_SPAYTMCREDS";
		
				ArrayList<String> Data=new ArrayList<String>();
				Data = GetDBData.Call( "", "", "" , "" ,"", FNname );
				String Result= Data.get(0);

			
				

					return Result ;

					
			}
		
		
		//PATYM CRED END
	
	
	@RequestMapping(value = { "LGS" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	@ResponseBody
	public String LoginSes(Locale locale, Model model, HttpSession session, HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		logger.info("Welcome home! The client locale is {}.", locale);

		// Date date = new java.util.Date();
		// System.out.println(date);

		String OP="";
		
		String propFileName = "DBSource.properties";
	    String ADAUTH="";
	    String DEFPWD="";
	    String SessionID ="";
	    String IP="";
	    String REQ="";
	    String url="";
	    String ADSearch="";
	    
	    String Location="";
		String Cord="";
		String LGSR= "";
		String LGURL="";
		String macAddress="";
		String IP1="";
		
		InetAddress 	ip=null;
		
		InputStream inputStream;
		Properties prop = new Properties();
		Base64.Decoder decoder = Base64.getDecoder();  
		
		if (request.getHeader("x-forwarded-for") == null) { 
			IP = request.getRemoteAddr();
	     } 
		else
		{	     
			IP = request.getHeader("x-forwarded-for");	
		}
		
		IP1=new String(decoder.decode(request.getParameter("parmc")));
		
		/*URL ipapi = new URL("https://ipapi.co/"+IP+"/json/");
		 
        URLConnection c = ipapi.openConnection();
        c.setRequestProperty("User-Agent", "java-ipapi-client");
        BufferedReader reader = new BufferedReader(
          new InputStreamReader(c.getInputStream())
        );
        Location = reader.readLine();
        reader.close();*/
 
        //System.out.println(Location);
		
        // TO GET MAC ADDRESS START
		
		String strMac = "";
		/* try { 
	          Process p = Runtime.getRuntime().exec("nbtstat -A " + IP); 
	          InputStreamReader ir = new InputStreamReader(p.getInputStream()); 
	          LineNumberReader input = new LineNumberReader(ir); 
	          for (int i = 1; i <100; i++) { 
	        	  strMac = input.readLine(); 
	        	  System.out.println(strMac);
	               if (strMac != null) { 
	                    if (strMac.indexOf("MAC Address") > 1) { 
	                         macAddress = strMac.substring(strMac.indexOf("MAC Address") + 14, strMac.length());
	                         System.out.println("REAL MAC: " + macAddress);
	                         break; 
	                    } 
	               } 
	          } 
	     } catch (IOException e) { 
	          e.printStackTrace(System.out); 
	     } 
		*/
		
        
        try {
			
    		ip = InetAddress.getLocalHost();
    	
    		//System.out.println("Current IP address : " + ip.getHostAddress());    		
    		
    		
    		NetworkInterface network = NetworkInterface.getByInetAddress(ip);
    			
    		byte[] mac = network.getHardwareAddress();
    			
    		//System.out.print("Current MAC address : ");
    			
    		StringBuilder sb = new StringBuilder();
    		for (int i = 0; i < mac.length; i++) {
    			sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));		
    		}
    		//System.out.println(sb.toString());
    		
    		macAddress = sb.toString();
    		
    			
    	} catch (UnknownHostException e) {
    		
    		e.printStackTrace();
    		
    	} catch (SocketException e){
    			
    		e.printStackTrace();
    			
    	}
		
        // TO GET MAC ADDRESS END
        
        String FileName="";
        FileName=System.getProperty("catalina.base");
		FileName=FileName+"/conf/"+propFileName;
		//System.out.println(FileName);		
		inputStream = new FileInputStream(FileName);
		
		// inputStream = getClass().getClassLoader().getResourceAsStream(propFileName);
		 
		  if (inputStream != null) {
	            prop.load(inputStream);                
	            ADAUTH = prop.getProperty("ADAUTH");	
	            DEFPWD = prop.getProperty("DEFPWD");
	            url = prop.getProperty("ADURL");
	            ADSearch = prop.getProperty("ADSearch");
	          	              
	            inputStream.close();
	          } else {
	            throw new java.io.FileNotFoundException("property file '" + inputStream + 
	              "' not found in the classpath");
	          }			
		
		
	
		
		String Username=request.getParameter("parma");
		String Code=request.getParameter("CPM");
		String PasswordTxt=new String(decoder.decode(request.getParameter("parmb")));
	
		
		String Password=PasswordTxt;
	   
		
		Username = new String(decoder.decode(Username));
		
		
		//LDAP CHECK START
		if (ADAUTH.equals("Yes"))			
		{
		
		OP = LDAP.getLDAP(Username, PasswordTxt, url, ADSearch);
		
		Password = DEFPWD;
		PasswordTxt = DEFPWD;
		
		REQ = ADAUTH + '~' + OP;
		
		}
		else
		{			
			OP="Success";	
			REQ="LOGIN";
		}
	    //LDAP CHECK END
			
		
	if (OP.equals("Success"))
	{
	
		 // String PwdText = password; 
			try {
		        MessageDigest m = MessageDigest.getInstance("MD5");
		        byte[] data = Password.getBytes();
		        m.update(data, 0, data.length);
		        BigInteger i = new BigInteger(1, m.digest());      
		        Password=String.format("%1$032x", i);
		      //  System.out.println(String.format("%1$032x", i));
		    	}
			catch (Exception ex) {}
			
	}
		
		double x = Math.random();
		double y = Math.random();
		
		SessionID = Username + "|" + "SESS" + x + y;
	

		Connection con = DBConnection.getConnection(null);


		
		String str = null;
		ResultSet rs = null;
		PreparedStatement proc_stmt = null;
		String xml = "";
		
		// Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		// Connection con =
		// DriverManager.getConnection("jdbc:sqlserver://192.168.1.200:1433;databaseName=ThemeproLO;username=sa;password=encore@123");
	
		try
		{
			 proc_stmt = con.prepareStatement("{ call LSW_SDIRUSERLOG (?,?,?,?,?,?,?,?) }");

		proc_stmt.setString(1, Username);
		proc_stmt.setString(2, SessionID);
		proc_stmt.setString(3, Password);
		proc_stmt.setString(4, PasswordTxt);
		proc_stmt.setString(5, IP + "|" + IP1 + "|" + ip.getHostAddress() + "|" + ip.getHostName());
		proc_stmt.setString(6, Location);
		proc_stmt.setString(7, macAddress);
		proc_stmt.setString(8, REQ);
	
		rs = proc_stmt.executeQuery();

		ResultSetMetaData rsmd = rs.getMetaData();
		int colCount = rsmd.getColumnCount();
		
		while (rs.next()) {
			
			LGSR = rs.getString(1);
			LGURL = rs.getString(2);
			
		}
		
		  if (rs != null) {
	     		 rs.close();
		            }
	     	 if (proc_stmt != null) {
	     		 proc_stmt.close();
		            }
	         if (con != null) {
	             con.close();
	         }
}
catch (Exception e)
{
	  try {
		  if (rs != null) {
     		 rs.close();
	            }
     	 if (proc_stmt != null) {
     		 proc_stmt.close();
	            }
         if (con != null) {
             con.close();
         }
	  } catch (SQLException sqlee) {
          sqlee.printStackTrace();
      }
	  
	e.printStackTrace();
}
		finally {
	        try {
	        	 if (rs != null) {
	        		 rs.close();
		            }
	        	 if (proc_stmt != null) {
	        		 proc_stmt.close();
		            }
	            if (con != null) {
	                con.close();
	            }
	           
	        } catch (SQLException sqlee) {
	            sqlee.printStackTrace();
	        }
	    }		
		
		if (LGSR.equals("LOGIN SUCCESSFUL"))
		{
		session.setAttribute("LogSession", SessionID);
		session.setAttribute("UsrSession", Username);
		session.setAttribute("CPMSession", PasswordTxt);
		
		session.setMaxInactiveInterval(200*60);
		// session.removeAttribute("csrfPreventionSaltCache");
		// session.setAttribute("CSRFTKN", "SESS"+x);
		//System.out.println(session.getAttribute("LogSession"));
		//System.out.println(session.getAttribute("UsrSession"));
		//System.out.println(session.getAttribute("CPMSession"));
		}
		return LGSR + "|" + LGURL;

	}
	
	
	
	//MOBWF Complete Start Date : 29/07/2020

			@RequestMapping(value = { "MOBWFCOMPLETE" }, method = {
					org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String MOBWFCOMPLETE(Locale locale, Model model, HttpSession session, HttpServletRequest request,
					HttpServletResponse response) {
				logger.info("Welcome home! The client locale is {}.", locale);

			
					
					String Response="";
					String ProcessID="";
					String ActivityID="";
					String http = request.getHeader("Origin");
					String Referer = request.getHeader("Referer");
					String ACTVID = request.getParameter("ACTVID");
					String WDATA = request.getParameter("WDATA");
					String SNAME = request.getParameter("SNAME");
					String UsrSession = request.getParameter("UsrSession");
					String CPMSession = request.getParameter("CPMSession");
					String Remarks = request.getParameter("Remarks");
					String CurrentActivity = request.getParameter("CurrentActivity");
					
					Response	= WFCall.WFComplete(ACTVID,WDATA,UsrSession,CPMSession, "", SNAME);
					
					String Reponse[] = Response.split("~");

					ProcessID = Reponse[0];
					ActivityID = Reponse[1];
					
					
					if (!ProcessID.equals("completed"))
					{
					//ArrayList<String> Data=new ArrayList<String>();
					
					//Data	= GetDBData.Call(ProcessID,ActivityID,request.getParameter("XML"), "", "", "LSW_SLOANINFOSUBMIT");

						
					Response = ProcessID+"~"+ActivityID+"~"+"";
					}
					else
					{
						
						if (WDATA.equals("var_status=Cancel")) {
							
							String FNname = "LSW_SREJCTRMRK";

							ArrayList<String> Data=new ArrayList<String>();
							Data = GetDBData.Call( ACTVID, Remarks, UsrSession , CurrentActivity ,"", FNname );
							String Result= Data.get(0);

							
						}
						
						Response = ProcessID+"~"+ActivityID+"~"+"";
					}
				

					return Response;
				

			}
			// MOBWF Complete End
			
			// Multi Sheet Excel Download Start Date:28072020
			@RequestMapping(value={"/MultiShtExcelDwnld"},	method={org.springframework.web.bind.annotation.RequestMethod.GET})
			@ResponseBody public void MultiShtExcelDwnld(HttpServletRequest request,HttpServletResponse response,HttpSession session   )
					          throws Exception
					        {
					          String param1 = request.getParameter("param1");
					          String param2 = request.getParameter("param2");
					          String param3 = request.getParameter("param3");
					          String param4 = request.getParameter("param4");
					          String param5 = request.getParameter("param5");
					          String param6 = request.getParameter("param6");
					          String param7 = request.getParameter("param7");
					          String param8 = request.getParameter("param8");
					          String spname = request.getParameter("spname");
					          String FName = request.getParameter("FName");
					          String FExtsn = request.getParameter("FExtsn");
					          String DBSrc = request.getParameter("DBSrc");
					                  DecimalFormat df2 = new DecimalFormat(".##");
					                  double valueF;
					                  TimeZone TIME_ZONE = null;
					                  DBSrc=null;
					                  ByteArrayInputStream excelStream = null;
					                  byte[] file = null;

					                  ByteArrayOutputStream outByteStream=null;
					                  Connection connection =null;
					                  PreparedStatement proc_stmt=null;
					                  ResultSet resultSet=null;
					                  String Sheet="";
					                  SXSSFWorkbook wb = null;
					                  SXSSFSheet[] personSheet=new SXSSFSheet[10];
					              	
					                  ArrayList<String> Data =(ArrayList<String>)GetDBData.Call(param1,param2, param3, param4,param5,	"LSW_SGETEXCELSHEETDATA");
					                  try
					                  {
					                  if(connection==null) {
					                  connection= DBConnection.getConnection(DBSrc);
					                  }
					                  System.out.println("Executing SP...");
					                  proc_stmt = connection.prepareStatement("{ call " + spname+ "(?,?,?,?,?,?,?,?) }");
					                  proc_stmt.setString(1, param1);
					                  proc_stmt.setString(2, param2);
					                  proc_stmt.setString(3, param3);
					                  proc_stmt.setString(4, param4);
					                  proc_stmt.setString(5, param5);
					                  proc_stmt.setString(6, param6);
					                  proc_stmt.setString(7, param7);
					                  proc_stmt.setString(8, param8);
					                  //resultSet = proc_stmt.executeQuery();
					                  String[] SheetVal =Data.get(0).toString().split(",", -2);
					                  boolean isResultSet = proc_stmt.execute();
					                  int count = 0;
					                  while(true) {
					                      if(isResultSet) {
					                    	  resultSet = proc_stmt.getResultSet();
					                          while(resultSet.next()) {
					                        	  Sheet=SheetVal[count];			 			                 
								                  ResultSetMetaData rsmd = resultSet.getMetaData();
								                  System.out.println("SP Executed...");
								                  if(count==0)
								                  {
								                    wb = new SXSSFWorkbook();
									                wb.setCompressTempFiles(true);
								                  }
								                  personSheet[count] = (SXSSFSheet) wb.createSheet(Sheet);
								      			  Row headerRow = personSheet[count].createRow(0);
								      			  Cell nameHeaderCell = headerRow.createCell(0);
								      			  Cell addressHeaderCell = headerRow.createCell(1);
								      			CellStyle style = wb.createCellStyle();
								                 style.setFillForegroundColor(HSSFColor.RED.index);
								                 style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
								      			  int i,j,type;
								      			  String chk;
								                  int colCount = rsmd.getColumnCount();
								                  for (i = 1; i <= colCount; i++)
								                  {
								                  chk= rsmd.getColumnName(i);

								                  //headerCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
								                  //style.setFillPattern(FillPatternType.BIG_SPOTS);
								                  headerRow.createCell(i-1);

								                  if(chk.contains("***")==true)
								                  {
								                   headerRow.getCell(i-1).setCellStyle(style);
								                  chk=chk.replace("***", "");
								                  headerRow.getCell(i-1).setCellValue(chk);
								                  }
								                  else
								                  {
								                  headerRow.getCell(i-1).setCellValue(chk);  
								                  }
								                  
								                  }

								                  System.out.println("Header Row Created...");
								                  j=1;
								                  while(resultSet.next())
								                  {
								                  headerRow = personSheet[count].createRow(j);
								                  for (i = 1; i <= colCount; i++)
								                  {
								                  type = rsmd.getColumnType(i);
								                  valueF = 0.0D;
								                  if (type == 2) {
								                    valueF = Math.round(resultSet.getDouble(i) * 100.0D);
								                    valueF /= 100.0D;
								                    headerRow.createCell(i - 1).setCellValue(valueF);
								                  } else if (type == 12) {
								                    headerRow.createCell(i - 1).setCellValue(resultSet.getString(i));
								                  } else if (type == 4) {
								                    headerRow.createCell(i - 1).setCellValue(resultSet.getInt(i));
								                  } else if (type == 93) {
								                    Timestamp timestamp = resultSet.getTimestamp(i);
								                    if (timestamp != null)
								                      headerRow.createCell(i - 1).setCellValue(new Date(timestamp.getDate())); 						                  
								                  }
								                  else
								                  {
								                	   headerRow.createCell(i - 1).setCellValue(resultSet.getString(i));
								                  }
								                  }
								                  if(j%100==0)    	
								                	  System.out.println("Rows Bind : "+j);
								                  j++; 
								                  }
								                  
					                          }
					                      } else {
					                          if(proc_stmt.getUpdateCount() == -1) {
					                              break;
					                          }
					                      }
					                      count ++;
					                      isResultSet = proc_stmt.getMoreResults();
					                  }
					                  
					                  FName=FName+"."+FExtsn;
					                    String contentType = null;
					                    if (FName.endsWith("xlsx")) {
					                        contentType = "application/octet-stream";
					                    } else if (FName.endsWith("pdf")) {
					                        contentType = "application/pdf";
					                    } else {
					                        throw new RuntimeException("File type not found");
					                    }
					                  
					                    outByteStream = new ByteArrayOutputStream();
					                    wb.write(outByteStream);
					                     excelStream = new ByteArrayInputStream(outByteStream.toByteArray());
					                     file = outByteStream.toByteArray();
					                   	 resultSet.close();			                  
					                     response.setHeader("Content-Disposition", "attachment;filename=" + FName);
					                     OutputStream outStream = response.getOutputStream();
					                     outStream.write(file);
					                     outStream.flush();
					                     outStream.close();
					                     outByteStream.close();
					            }
					            catch(Exception ex){
					                  System.out.println("Exception in Excel Download");
					                  ex.printStackTrace();   
					            }
					            finally
					            {
					                  //DBConnection.closeConnectionCall(connection, proc_stmt,resultSet);
					                  proc_stmt.close();
					                  connection.commit();
					                  resultSet.close();           
					                  connection.close();
					            }

					        }

			// Multi Sheet Excel Download End Date:28072020	

	@RequestMapping(value = {"/InsrncePrmeiumReGen"}, method = {RequestMethod.POST})
	   @ResponseBody
	   public String InsrncePrmeiumReGen(HttpServletRequest request, HttpServletResponse response) throws Exception, ClassNotFoundException {
		   Integration.InsrncePrmeiumReGen InsrncePrmeium = new InsrncePrmeiumReGen();
	 	 String param1 = request.getParameter("param1");
	     String param2 = request.getParameter("param2");
	     String param3 = request.getParameter("param3");
	     String param4 = request.getParameter("param4");
	     String param5 = request.getParameter("param5");
	     String DBSrc = request.getParameter("DBSrc");
	     String spname1 = request.getParameter("spname1");
	     String spname2 = request.getParameter("spname2");
	     InsrncePrmeium.param1(param1);
	     InsrncePrmeium.param2(param2);
	     InsrncePrmeium.param3(param3);
	     InsrncePrmeium.param4(param4);
	     InsrncePrmeium.param5(param5);
	     InsrncePrmeium.spname1(spname1);
	     InsrncePrmeium.spname2(spname2);
	 	  
	 	  
	     return InsrncePrmeium.InsrncePrmeiumReGen();
	   }
	

	
	//MASTERSYNC     START

	@RequestMapping(value = { "MASTERSYNC" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MASTERSYNC(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String TYPE = request.getParameter("TYPE");
		String DATE = request.getParameter("DATE");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SMASTERSYNC";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( TYPE, DATE, TOKENID , "" ,"", FNname );
		String Result= Data.get(0);
			return Result ;		
	}

	//MASTERSYNC     END
	
	
	//ECN START
	
			@RequestMapping(value = { "ECN" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
			@ResponseBody
			public String ECN(HttpServletRequest request, HttpServletResponse response)
					throws Exception, ClassNotFoundException {
				
				String Intrresponse ="";
				String FNname = "LSW_SECNNOAPI";
				String ECNNO = request.getParameter("ECNNO");
				String UNIQUEID = request.getParameter("UNIQUEID");
				String TOKENID = request.getParameter("TOKENID");;
				int PRETTY_PRINT_INDENT_FACTOR = 4;
				

				ArrayList<String> Data=new ArrayList<String>();
				Data = GetDBData.Call( ECNNO,TOKENID, UNIQUEID , "" ,"", FNname );
				String Result= Data.get(0);
				String UNIQUEID1= Data.get(1);
				String EndPoint1= Data.get(2);
				//org.json.JSONObject xmlJSONObj = org.json.XML.toJSONObject(Result);
	           // String jsonPrettyPrintString = xmlJSONObj.toString(4);
	            
	            
	Intrresponse = JSInterfaceCall.JInterfaceCallSrv(EndPoint1, Result,"","","");
				
				String Reponse[] = Intrresponse.split("~");

				Intrresponse = Reponse[0];


	            
	 
				return Intrresponse ;
		
				
					
			}
		
		
		//ECN END
	
	//ANALYTICS INPUT JSON  START
	
	@RequestMapping(value = { "ANALYTICSINP" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	@ResponseBody
	public String ANALYTICSINP(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String FNname = "LSW_SANALYTICSINPUT_COMBINED";
		String PRCSID = request.getParameter("PRCSID");
		String UNIQUEID = request.getParameter("UNIQUEID");
		String TOKENID = request.getParameter("TOKENID");;

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( "", "", TOKENID , UNIQUEID ,PRCSID, FNname );
		String Result= Data.get(0);

			return Result ;	
	}
//ANALYTICS INPUT JSON END
	

	@RequestMapping(value = { "/SendMail" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MailView(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String To = request.getParameter("To");

		String Title = request.getParameter("Title");

		String MsgContent = request.getParameter("MsgContent");

		String fromMail = request.getParameter("fromMail");

		String fromPwd = request.getParameter("fromPwd");

		String Prophost = request.getParameter("Prophost");

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			MailSending MS = new MailSending();

			String s1 = MS.Send(fromMail, fromPwd, To, "", Title, MsgContent, Prophost);

			return s1;
		}
	}

	@RequestMapping(value = { "/UpSendMail" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UpMailView(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String To = request.getParameter("To");

		String Title = request.getParameter("Title");

		String MsgContent = request.getParameter("MsgContent");

		String fromMail = request.getParameter("fromMail");

		String fromPwd = request.getParameter("fromPwd");

		String Prophost = request.getParameter("Prophost");
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			UpMailSending MS = new UpMailSending();

			String s1 = MS.Send(fromMail, fromPwd, To, "", Title, MsgContent, Prophost);

			return s1;
		}
	}

	@RequestMapping(value = { "/UI_GetData" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_GetData(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		try {
			UI_GetData getdata = new UI_GetData();

			String param1 = request.getParameter("param1");

			String param2 = request.getParameter("param2");

			String param3 = request.getParameter("param3");

			String param4 = request.getParameter("param4");

			String param5 = request.getParameter("param5");

			String spname = request.getParameter("spname");

			String DBSrc = request.getParameter("DBSrc");
			String Token = request.getParameter("Token");

			getdata.param1(param1);

			getdata.param2(param2);

			getdata.param3(param3);

			getdata.param4(param4);

			getdata.param5(param5);

			getdata.spname(spname);

			getdata.DBSrc(DBSrc);
			// getdata.Token(Token);

			Object time = session.getAttribute("LogSession");
			// Object Tkn = session.getAttribute("CSRFTKN");

			/*
			 * if (time == null) { return "redirect:"; } else {
			 */

			/*
			 * if(Token==Tkn) {
			 */
			return getdata.UI_GetData1();
			/*
			 * } else { return "Invalid Token"; }
			 */
			// }

		} catch (Exception e) {

			System.out.print(e);
		}
		return null;
	}

	@RequestMapping(value = { "/UI_GetDataLrg" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_GetDataLrg(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		try {
			CommonModel.UI_GetDataLrg getdata = new CommonModel.UI_GetDataLrg();

			String param1 = request.getParameter("param1");

			String param2 = request.getParameter("param2");

			String param3 = request.getParameter("param3");

			String param4 = request.getParameter("param4");

			String param5 = request.getParameter("param5");

			String spname = request.getParameter("spname");

			String DBSrc = request.getParameter("DBSrc");
			String Token = request.getParameter("Token");

			getdata.param1(param1);

			getdata.param2(param2);

			getdata.param3(param3);

			getdata.param4(param4);

			getdata.param5(param5);

			getdata.spname(spname);

			getdata.DBSrc(DBSrc);
			// getdata.Token(Token);

			Object time = session.getAttribute("LogSession");
			// Object Tkn = session.getAttribute("CSRFTKN");

			/*
			 * if (time == null) { return "redirect:"; } else {
			 */

			/*
			 * if(Token==Tkn) {
			 */
			return getdata.UI_GetData1();
			/*
			 * } else { return "Invalid Token"; }
			 */
			// }

		} catch (Exception e) {

			System.out.print(e);
		}
		return null;
	}
	
	
	
	@RequestMapping(value = { "/UI_LoginGetData" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_LoginGetData(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		try {
			UI_LoginGetData getdata = new UI_LoginGetData();

			String param1 = request.getParameter("param1");

			String param2 = request.getParameter("param2");

			String param3 = request.getParameter("param3");

			String param4 = request.getParameter("param4");

			String param5 = request.getParameter("param5");

			String spname = request.getParameter("spname");

			String DBSrc = request.getParameter("DBSrc");

			getdata.param1(param1);

			getdata.param2(param2);

			getdata.param3(param3);

			getdata.param4(param4);

			getdata.param5(param5);

			getdata.spname(spname);

			getdata.DBSrc(DBSrc);

			return getdata.UI_LoginGetData1();

		} catch (Exception e) {

			System.out.print(e);
		}
		return null;
	}

	@RequestMapping(value = { "/UI_fetchformdata" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_fetchformdata(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_fetchformdata fetchformdata = new UI_fetchformdata();

		String param1 = request.getParameter("id");

		String param2 = request.getParameter("TableName");

		String DBSrc = request.getParameter("DBSrc");

		fetchformdata.param1(param1);

		fetchformdata.param2(param2);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = fetchformdata.UI_fetchformdata1();

			return retval;
		}
	}

	@RequestMapping(value = { "/GridView" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String GridView(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		GridView getdata = new GridView();

		String param1 = request.getParameter("Param");

		String param2 = request.getParameter("brid");

		String param3 = request.getParameter("MnuId");

		String spname = request.getParameter("spname");

		String DBSrc = request.getParameter("DBSrc");

		getdata.param1(param1);

		getdata.param2(param2);

		getdata.param3(param3);

		getdata.spname(spname);

		getdata.DBSrc(DBSrc);

		/*
		 * Object time = session.getAttribute("LogSession"); if (time == null) { return
		 * "redirect:"; } else {
		 */
		String retval = getdata.UI_GetGridview();

		return retval;
		// }
	}
	
	//EXISTING     START

	@RequestMapping(value = { "EXISTINGLOAN" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String EXISTINGLOAN(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SEXISTINGLOAN";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, TOKENID, "" , "" ,"", FNname );
		String Result= Data.get(0);


		

			return Result ;

			
	}


	//EXISTING     END
	
	//OCR INTEGRATION START

	@RequestMapping(value = { "MOCR" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MOCR(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {

		String DOCURL = request.getParameter("DOCURL");
		String PRCSID = request.getParameter("PRCSID");
		String Type = request.getParameter("Type");
		String DOCNAME = request.getParameter("DOCNAME");
		String OP="";
		
		String FNname = "LSW_SDMSURL";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( DOCURL, "", "" , "" ,"", FNname );
		String Result= Data.get(0);
		
		Object time = session.getAttribute("LogSession");

			OP = TotalKycOCR.OCR(Result,PRCSID,Type,DOCNAME);
			return OP;

	}

	//OCR INTEGRATION END


	// DELETE API     START

	@RequestMapping(value = { "DELETEENTRY" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String DELETEENTRY(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String UNIQUEID = request.getParameter("UNIQUEID");
		String TYPE = request.getParameter("TYPE");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SDELETEAPI";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, UNIQUEID, TYPE , TOKENID ,"", FNname );
		String Result= Data.get(0);


		

			return Result ;

			
	}


	//DELETE API      END
	
	//MOBILITY DMS START

	@RequestMapping(value = { "MDMS" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MDMS(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		DMS getdata = new DMS();

		boolean isMultipart = ServletFileUpload.isMultipartContent(request);

		String PrcsID = request.getParameter("PrcsID");

		String FormName = request.getParameter("FormName");

		String names = request.getParameter("names");

		String descrptns = request.getParameter("descrptns");

		String flsize = request.getParameter("flsize");

		String vrsnno = request.getParameter("vrsnno");

		String usrpwd = request.getParameter("usrpwd");

		String domain = request.getParameter("domain");
		
	  String CusID = request.getParameter("CusID");
		
		String DocName = request.getParameter("DocName");

		String DBSrc = request.getParameter("DBSrc");

		getdata.PrcsID(PrcsID);

		getdata.FormName(FormName);

		getdata.names(names);

		getdata.descrptns(descrptns);

		getdata.flsize(flsize);

		getdata.vrsnno(vrsnno);

		getdata.usrpwd(usrpwd);

		getdata.domain(domain);
		
	  getdata.CusID(CusID);
		
		getdata.DocName(DocName);

		getdata.DBSrc(DBSrc);



			String retval = getdata.DMSPUSH(request, response);

			return retval;

	}

	//MOBILITY DMS END


	//MOBILITYDMS VIEW START

	@RequestMapping(value={"MDMSVIEW"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})

	@ResponseBody

	public void MDMSVIEW(HttpServletRequest request, HttpServletResponse response, HttpSession session)

	throws Exception

	{
	//@RequestMapping(value = { "/DMSVIEW" }, method = {

//	      org.springframework.web.bind.annotation.RequestMethod.GET })

	//@ResponseBody

	//public byte[] DMSVIEW(HttpServletRequest request, HttpServletResponse response, HttpSession session)

	   //     throws Exception {

	   //DMSView getdata = new DMSView();

	   boolean isMultipart = ServletFileUpload.isMultipartContent(request);

	   String PrcsID = request.getParameter("PrcsID");

	   String DMSID = request.getParameter("DMSID");

	   String DMSURL = "";

	   String fileNAME="";

	   String format="";

	   String retval = "";

	   //getdata.PrcsID(PrcsID);



	   //getdata.DMSID(DMSID);



	   ////Object time = session.getAttribute("LogSession");

	   //if (time == null) {

	   //     return "redirect:";

	   //} else {

	         ArrayList<String> Data=new ArrayList<String>();
	         Data = GetDBData.Call(PrcsID,DMSID, "", "", "", "LSW_SDMSVIEW");

	         DMSURL = Data.get(0);

	         fileNAME = Data.get(1);

	         format=Data.get(2);

	    /*if (format.endsWith("xlsx")) {

	        contentType = "application/octet-stream";

	    } else if (format.endsWith("pdf")) {

	        contentType = "application/pdf";

	    } else {

	        throw new RuntimeException("File type not found");

	    }*/

	         URL url = new URL(DMSURL);

	    HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();

	    int responseCode = httpConn.getResponseCode();

	    // always check HTTP response code first

	    if (responseCode == HttpURLConnection.HTTP_OK) {

	         // final FileInputStream fileInputStream = new FileInputStream(new File(DMSURL));

	    // final byte[] buf = new byte[16777216];

	    // int len;

	     ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

	     byte[] chunk = new byte[4096];

	     int bytesRead;

	     InputStream stream = httpConn.getInputStream();

	     try {

	         while ((bytesRead = stream.read(chunk)) > 0) {

	             outputStream.write(chunk, 0, bytesRead);

	         }
	     byte[] DocContent;

	     stream.close();

	     DocContent =  outputStream.toByteArray();

	   // outByteStream = new ByteArrayOutputStream();

	   // wb.write(outByteStream);

	     //excelStream = new ByteArrayInputStream(outByteStream.toByteArray());

	  // file = outByteStream.toByteArray();

	     //fileInputStream.close();

	     outputStream.close();

	 //  response.setContentType("application/ms-excel");

	   response.setContentLength(DocContent.length);

	   response.setHeader("Content-Disposition", "attachment; filename=" + fileNAME);

	   OutputStream outStream = response.getOutputStream();

	   outStream.write(DocContent);

	   outStream.flush();

	   outStream.close();

	     } catch (IOException e) {

	          stream.close();

	          outputStream.close();

	         e.printStackTrace();
	     }
	   }

	}
	//MOBILITY DMS VIEW END
	
	
	//MOBILITY PAYTMINITIATE START

	@RequestMapping(value = { "PAYTMINITIATE" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String PAYTMINITIATE(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {



		String UniqueID = request.getParameter("UNIQUEID");
		String Amount = request.getParameter("Amount");
		String Type = request.getParameter("Type");
		String Prvnt = request.getParameter("Prvnt");
		String PRCSID = request.getParameter("PRCSID");
		String OriginURL ="" ;
		String dbhitfn ="LSW_SPAYTMINITIATE";
		String FNname ="LSW_SSENDPAYMNTLINK";
		
		UniqueID="Paytm"+",PF," + UniqueID ;
		String URL = "/TPLSW/PAYTMONL?UniqueID="+Amount+"&Type="+UniqueID+"&PRCSID="+PRCSID+"&Prvnt="+Prvnt;
		
		
		ArrayList<String> Data0=new ArrayList<String>();
		Data0 = GetDBData.Call( PRCSID, UniqueID, Amount , Type , URL , dbhitfn );
		String Result0= Data0.get(0);
		OriginURL =Result0 ;
		
		
		 URL = OriginURL +"/TPLSW/PAYTMONL?UniqueID="+Amount+"&Type="+UniqueID+"&PRCSID="+PRCSID+"&Prvnt="+Prvnt;
		
		 URL = URLEncoder.encode(URL, "UTF-8");
		
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( URL, PRCSID, Amount , "SMS" ,"", FNname );
		String Result= Data.get(0);
		
		ArrayList<String> Data1=new ArrayList<String>();
		Data1 = GetDBData.Call( PRCSID, Amount ,URL  , "EMAIL" ,"", FNname );
		String Result1= Data1.get(0);
		
			return  Result + "~" + Result1 ;

	}

	//MOBILITY PAYTMINITIATE START


	//PATYM STATUS   START

	@RequestMapping(value = { "PAYTMSTATUS" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String PAYTMSTATUS(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String UniqueID = request.getParameter("UNIQUEID");
		String PRCSID = request.getParameter("PRCSID");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SPAYTMSTATUS";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, UniqueID, TOKENID , "" ,"", FNname );
		String Result= Data.get(0);
			return Result ;	
	}


	//PATYM STATUS END

	//SOURCE MASTER   START

	@RequestMapping(value = { "SOURCE" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String SOURCE(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String TYPE = request.getParameter("TYPE");
		String BRID = request.getParameter("BRID");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SSOURCEAPI";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( TYPE, BRID, TOKENID , "" ,"", FNname );
		String Result= Data.get(0);

			return Result ;

			
	}


	//SOURCE MASTER  END

	// MOBILITY CIBIL START

	@RequestMapping(value = { "MCIBIL" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MCIBIL(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		CIBILIntegration getdata = new CIBILIntegration();

		String appno = request.getParameter("appno");
		String cusid = request.getParameter("cusid");
		String DBSrc = request.getParameter("DBSrc");

		getdata.appno(appno);
	    getdata.cusid(cusid);
	    getdata.DBSrc(DBSrc);


			String retval = getdata.CIBIL();
			
			String FNname = "LSW_SMCIBIL";
			ArrayList<String> Data=new ArrayList<String>();
			Data = GetDBData.Call( retval, appno , cusid , "" ,"", FNname );
			String Result= Data.get(0);

			 
			
			return Result;

	}

	// MOBILITY CIBIL END
	
	@RequestMapping(value = { "/FncallWebserviceGridView" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String FncallWebserviceGridView(HttpServletRequest request, HttpServletResponse response,
			HttpSession session) throws Exception {
		FncallWebserviceGrid getdata = new FncallWebserviceGrid();

		String param1 = request.getParameter("Param");

		String param2 = request.getParameter("brid");

		String param3 = request.getParameter("MnuId");

		String spname = request.getParameter("spname");

		String DBSrc = request.getParameter("DBSrc");

		getdata.param1(param1);

		getdata.param2(param2);

		getdata.param3(param3);

		getdata.DBSrc(DBSrc);

		getdata.spname(spname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.UI_GetFncallWSGridview();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_formdatains" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_formdatains(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_formdatainsert getdata = new UI_formdatainsert();

		String xml = request.getParameter("xml");

		String tablenameins = request.getParameter("tablenameins");

		String tablenameins1 = request.getParameter("tablenameins1");

		String activityid = request.getParameter("activityid");

		String activityname = request.getParameter("activityname");

		String DBSrc = request.getParameter("DBSrc");

		getdata.xml(xml);

		getdata.tablenameins(tablenameins);

		getdata.tablenameins1(tablenameins1);

		getdata.activityid(activityid);

		getdata.activityname(activityname);

		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.UI_formdatainsertdata();

			return retval;
		}
	}
	
	
	//MOBMILESTONE     START

	@RequestMapping(value = { "MOBMILESTONE" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MILESTONE(HttpServletRequest request, HttpServletResponse response )
			throws Exception, ClassNotFoundException {
		
		
		String PRCSID = request.getParameter("PRCSID");
		String STAGE = request.getParameter("STAGE");
		String TOKENID = request.getParameter("TOKENID");
		
		String FNname = "LSW_SMILESTONE";

		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PRCSID, STAGE, TOKENID , "" ,"", FNname );
		String Result= Data.get(0);

			return Result ;
		
	}
	//MOBMILESTONE     END

	@RequestMapping(value = { "/UI_fetchformdata_get2date" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_fetchformdata_get2date(HttpServletRequest request, HttpServletResponse response,
			HttpSession session) throws Exception {
		UI_fetchformdata_get2date getdata = new UI_fetchformdata_get2date();

		String DBSrc = request.getParameter("DBSrc");

		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.UI_fetchformdata_get2date1();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_GetLoginPwd" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_GetLoginPwd(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_GetLoginPwd getdata = new UI_GetLoginPwd();

		String username = request.getParameter("username");

		String DBSrc = request.getParameter("DBSrc");

		getdata.username(username);

		getdata.DBSrc(DBSrc);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.UI_GetLoginPwd1();

			return retval;
		}
	}

	@RequestMapping(value = { "/CS_FetchFormFieldData" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String CS_FetchFormFieldData(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		CS_FetchFormFieldData getdata = new CS_FetchFormFieldData();

		String param1 = request.getParameter("param1");

		String param2 = request.getParameter("param2");

		String param3 = request.getParameter("param3");

		String param4 = request.getParameter("param4");

		String param5 = request.getParameter("param5");

		String spname = request.getParameter("spname");

		String DBSrc = request.getParameter("DBSrc");

		getdata.param1(param1);

		getdata.param2(param2);

		getdata.param3(param3);

		getdata.param4(param4);

		getdata.param5(param5);

		getdata.DBSrc(DBSrc);

		getdata.spname(spname);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.CS_FetchFormFieldData();

			return retval;
		}
	}

	@RequestMapping(value = { "/CS_Migrformdata" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String CS_Migrformdata(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		CS_Migrformdata getdata = new CS_Migrformdata();

		String Fromfields = request.getParameter("Fromfields");

		String Tofields = request.getParameter("Tofields");

		String Fromtable = request.getParameter("Fromtable");

		String Totable = request.getParameter("Totable");

		String ProcessID = request.getParameter("ProcessID");

		String spname = request.getParameter("spname");

		String DBSrc = request.getParameter("DBSrc");

		getdata.Fromfields(Fromfields);

		getdata.Tofields(Tofields);

		getdata.Fromtable(Fromtable);

		getdata.Totable(Totable);

		getdata.ProcessID(ProcessID);

		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.CS_Migrformdata();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_fetchActivityform" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_fetchActivityform(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_fetchActivityform getdata = new UI_fetchActivityform();

		String ProcessDefID = request.getParameter("ProcessDefID");

		String ActivityDefID = request.getParameter("ActivityDefID");

		String DBSrc = request.getParameter("DBSrc");

		getdata.ProcessDefID(ProcessDefID);

		getdata.ActivityDefID(ActivityDefID);

		getdata.DBSrc(DBSrc);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.UI_fetchActivityform();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_fetchformButtonData" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_fetchformButtonData(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_fetchformButtonData getdata = new UI_fetchformButtonData();

		String ProcessDefID = request.getParameter("ProcessDefID");

		String ActivityDefID = request.getParameter("ActivityDefID");

		String DBSrc = request.getParameter("DBSrc");

		getdata.ProcessDefID(ProcessDefID);

		getdata.ActivityDefID(ActivityDefID);

		getdata.DBSrc(DBSrc);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.UI_fetchformButtonData();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_fetchformdata_get2dateTime" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_fetchformdata_get2dateTime(HttpServletRequest request, HttpServletResponse response,
			HttpSession session) throws Exception {
		UI_fetchformdata_get2dateTime getdata = new UI_fetchformdata_get2dateTime();

		String DBSrc = request.getParameter("DBSrc");

		getdata.DBSrc(DBSrc);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.UI_fetchformdata_get2dateTime();

			return retval;
		}
	}

	@RequestMapping(value = { "/UI_formdatains_General" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_formdatains_General(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		UI_formdatains_General getdata = new UI_formdatains_General();

		String DBSrc = request.getParameter("DBSrc");

		getdata.DBSrc(DBSrc);
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.UI_formdatains_General();

			return retval;
		}
	}

	@RequestMapping(value = { "/deletefile" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String deletefile(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		deletefile getdata = new deletefile();

		String DBSrc = request.getParameter("DBSrc");

		String retval = getdata.deletefile();

		return retval;
	}

	@RequestMapping(value = { "/UI_formdata_GetMainPageHTML" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String UI_formdata_GetMainPageHTML(HttpServletRequest request, HttpServletResponse response,
			HttpSession session) throws Exception {
		UI_formdata_GetMainPageHTML getdata = new UI_formdata_GetMainPageHTML();

		String Username = request.getParameter("Username");

		String MenuName = request.getParameter("MenuName");

		String DBSrc = request.getParameter("DBSrc");

		getdata.Username(Username);

		getdata.MenuName(MenuName);

		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.UI_formdata_GetMainPageHTML();

			return retval;
		}
	}

	@RequestMapping(value = { "/FileUploadHandler" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String FileUploadHandler(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		FileUploadHandler getdata = new FileUploadHandler();

		boolean isMultipart = ServletFileUpload.isMultipartContent(request);

		String PrcsID = request.getParameter("PrcsID");

		String FormName = request.getParameter("FormName");

		String names = request.getParameter("names");

		String descrptns = request.getParameter("descrptns");

		String flsize = request.getParameter("flsize");

		String vrsnno = request.getParameter("vrsnno");

		String usrpwd = request.getParameter("usrpwd");

		String domain = request.getParameter("domain");
		
        String CusID = request.getParameter("CusID");
		
		String DocName = request.getParameter("DocName");

		String DBSrc = request.getParameter("DBSrc");

		getdata.PrcsID(PrcsID);

		getdata.FormName(FormName);

		getdata.names(names);

		getdata.descrptns(descrptns);

		getdata.flsize(flsize);

		getdata.vrsnno(vrsnno);

		getdata.usrpwd(usrpwd);

		getdata.domain(domain);
		
        getdata.CusID(CusID);
		
		getdata.DocName(DocName);

		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.FileUploadHandler(request, response);

			return retval;
		}
	}

	@RequestMapping(value = { "/PANCINDIN" }, method = { org.springframework.web.bind.annotation.RequestMethod.GET })
	@ResponseBody
	public String PANCINDIN(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		PANCINDIN getdata = new PANCINDIN();

		String param1 = request.getParameter("param1");

		String param2 = request.getParameter("param2");

		String param3 = request.getParameter("param3");

		String param4 = request.getParameter("param4");

		String param5 = request.getParameter("param5");

		String DBSrc = request.getParameter("DBSrc");

		String spname = request.getParameter("spname");

		getdata.param1(param1);

		getdata.param2(param2);

		getdata.param3(param3);

		getdata.param4(param4);

		getdata.param5(param5);

		getdata.DBSrc(DBSrc);

		getdata.spname(spname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {

			String retval = getdata.PANCINDIN();

			return retval;
		}
	}

	@RequestMapping(value = { "/GetExclDataNOF" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String GetExclDataNOF(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		GetExclDataNOF getdata = new GetExclDataNOF();
		String param1 = request.getParameter("param1");
		String param2 = request.getParameter("param2");
		String param3 = request.getParameter("param3");
		String param4 = request.getParameter("param4");
		String param5 = request.getParameter("param5");
		String param6 = request.getParameter("param6");
		String param7 = request.getParameter("param7");
		String DBSrc = request.getParameter("DBSrc");
		String spname = request.getParameter("spname");

		getdata.param1(param1);
		getdata.param2(param2);
		getdata.param3(param3);
		getdata.param4(param4);
		getdata.param5(param5);
		getdata.param6(param6);
		getdata.param7(param7);
		getdata.DBSrc(DBSrc);
		getdata.spname(spname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.GetExclData();
			return retval;
		}
	}

	@RequestMapping(value = { "/MailSendWthAttchRPTBdy" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MailSendWthAttchRPTBdy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		String To = request.getParameter("To");
		String Title = request.getParameter("Title");
		String MsgContent = request.getParameter("MsgContent");
		String fromMail = request.getParameter("fromMail");
		String fromPwd = request.getParameter("fromPwd");
		String Prophost = request.getParameter("Prophost");
		String ccEmail = request.getParameter("ccEmail");
		String FleNme = request.getParameter("FleNme");
		String RptUrl = request.getParameter("RptUrl");
		
		String bccEmail = request.getParameter("bccEmail");

		// Object time = session.getAttribute("LogSession");
		// if (time == null) {
		// return "redirect:";
		// }
		// else
		// {
		MailSendWthAttchRPTBdy MS = new MailSendWthAttchRPTBdy();
		String s1 = MS.Send(fromMail, fromPwd, To, ccEmail,bccEmail, Title, MsgContent, Prophost, FleNme, RptUrl);

		return s1;
		// }
	}

	
	@RequestMapping(

            value = {"/MSInsrncePrmeium"},

            method = {RequestMethod.POST}

         )

         @ResponseBody

         public String MSInsrncePrmeium(HttpServletRequest request, HttpServletResponse response) throws Exception, ClassNotFoundException {

   MSInsrncePrmeium MSInsrncePrmeium = new MSInsrncePrmeium();

            String param1 = request.getParameter("param1");

            String param2 = request.getParameter("param2");

            String param3 = request.getParameter("param3");

            String param4 = request.getParameter("param4");

            String param5 = request.getParameter("param5");

            String param6 = request.getParameter("param6");
            String param7 = request.getParameter("param7");
            String DBSrc = request.getParameter("DBSrc");
            String spname1 = request.getParameter("spname1");
            String spname2 = request.getParameter("spname2");
            
            MSInsrncePrmeium.param1(param1);
            MSInsrncePrmeium.param2(param2);
            MSInsrncePrmeium.param3(param3);
            MSInsrncePrmeium.param4(param4);
            MSInsrncePrmeium.param5(param5);
            MSInsrncePrmeium.param6(param6);
            MSInsrncePrmeium.param7(param7);
            MSInsrncePrmeium.spname1(spname1);
            MSInsrncePrmeium.spname2(spname2);
            return MSInsrncePrmeium.MSInsrncePrmeium();

         }
	
	
	
	@RequestMapping(value = { "/GetExclDataSheet" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String GetExclDataSheet(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		GetExclDataSheet getdata = new GetExclDataSheet();

		String param1 = request.getParameter("param1");
		String param2 = request.getParameter("param2");
		String param3 = request.getParameter("param3");
		String param4 = request.getParameter("param4");
		String param5 = request.getParameter("param5");
		String param6 = request.getParameter("param6");
		String param7 = request.getParameter("param7");
		String param8 = request.getParameter("param8");
		String FName = request.getParameter("FName");
		String DBSrc = request.getParameter("DBSrc");
		String spname = request.getParameter("spname");
		String sheetname = request.getParameter("sheetname");

		getdata.param1(param1);
		getdata.param2(param2);
		getdata.param3(param3);
		getdata.param4(param4);
		getdata.param5(param5);
		getdata.param6(param6);
		getdata.param7(param7);
		getdata.param8(param8);
		getdata.FName(FName);
		getdata.DBSrc(DBSrc);
		getdata.spname(spname);
		getdata.sheetname(sheetname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.GetExclData();
			return retval;
		}
	}

	@RequestMapping(value = { "/GetExclData" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String GetExclData(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		GetExclData getdata = new GetExclData();

		String param1 = request.getParameter("param1");
		String param2 = request.getParameter("param2");
		String param3 = request.getParameter("param3");
		String param4 = request.getParameter("param4");
		String param5 = request.getParameter("param5");
		String param6 = request.getParameter("param6");
		String param7 = request.getParameter("param7");
		String param8 = request.getParameter("param8");
		String FName = request.getParameter("FName");
		String DBSrc = request.getParameter("DBSrc");
		String spname = request.getParameter("spname");

		getdata.param1(param1);
		getdata.param2(param2);
		getdata.param3(param3);
		getdata.param4(param4);
		getdata.param5(param5);
		getdata.param6(param6);
		getdata.param7(param7);
		getdata.param8(param8);
		getdata.FName(FName);
		getdata.DBSrc(DBSrc);
		getdata.spname(spname);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.GetExclData();
			return retval;
		}
	}

	// Integration Controller Start 
	
	@RequestMapping(value = { "/TotalKyc" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String TotalKyc(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		TotalKyc getdata = new TotalKyc();

		//String reqxml = request.getParameter("reqxml");
		//String apitype = request.getParameter("apitype");
		//String processId = request.getParameter("processId");
		String JSONval = request.getParameter("JSONval");
		String DBSrc = request.getParameter("DBSrc");

		//getdata.reqxml(reqxml);
	    //getdata.apitype(apitype);
		//getdata.processId(processId);
		getdata.JSONval(JSONval);
		getdata.DBSrc(DBSrc);

		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			String retval = getdata.TotlKyc();
			return retval;
		}
	}
	
	// Integration Controller End
	
	
	
	@RequestMapping(value = { "/TotalKycOCR" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String TotalKycOCR(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
		//TotalKyc getdata = new TotalKyc();

		//String reqxml = request.getParameter("reqxml");
		//String apitype = request.getParameter("apitype");
		//String processId = request.getParameter("processId");
		String DOCURL = request.getParameter("DOCURL");
		String PRCSID = request.getParameter("PRCSID");
		String Type = request.getParameter("Type");
		String DOCNAME = request.getParameter("DOCNAME");
		String OP="";
		
		//getdata.reqxml(reqxml);
	    //getdata.apitype(apitype);
		//getdata.processId(processId);
		
		
		Object time = session.getAttribute("LogSession");
		if (time == null) {
			return "redirect:";
		} else {
			//File file=null;
			OP = TotalKycOCR.OCR(DOCURL,PRCSID,Type,DOCNAME);
			return OP;
		}
	}
	
	
	// CIBIL Integration Controller Start
	
			@RequestMapping(value = { "/CIBILIntegration" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String CIBILIntegration(HttpServletRequest request, HttpServletResponse response, HttpSession session)
					throws Exception {
				CIBILIntegration getdata = new CIBILIntegration();

				String appno = request.getParameter("appno");
				String cusid = request.getParameter("cusid");
				String DBSrc = request.getParameter("DBSrc");

				getdata.appno(appno);
			    getdata.cusid(cusid);
			    getdata.DBSrc(DBSrc);

				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					String retval = getdata.CIBIL();
					return retval;
				}
			}
			
			// CIBIL Integration Controller End
			
			// PAYTM GATEWAY START

			@RequestMapping(value = { "PAYTM" }, method = {
					org.springframework.web.bind.annotation.RequestMethod.GET })
			public String PAYTM(HttpServletRequest request, HttpServletResponse response, HttpSession session)
					throws Exception {
				String OP = "";

				String Amount = request.getParameter("UniqueID");
				String Type = request.getParameter("Type");
				String Prvnt = request.getParameter("Prvnt");
				String PRCSID = request.getParameter("PRCSID");

				Object time = session.getAttribute("LogSession");
				if (time == null) {
					return "redirect:";
				} else {
					OP = PAYTM.PaymentCall(Amount, Type, Prvnt,PRCSID);

					String Reponse[] = OP.split("~");
					
					request.setAttribute("MID", Reponse[0]);
					request.setAttribute("ORDER_ID", Reponse[1]);
					request.setAttribute("CUST_ID", Reponse[2]);
					request.setAttribute("INDUSTRY_TYPE_ID", Reponse[3]);
					request.setAttribute("CHANNEL_ID", Reponse[4]);
					request.setAttribute("TXN_AMOUNT", Reponse[5]);
					request.setAttribute("WEBSITE", Reponse[6]);
					request.setAttribute("EMAIL", Reponse[7]);
					request.setAttribute("MOBILE_NO", Reponse[8]);
					request.setAttribute("CALLBACK_URL", Reponse[9]);
					request.setAttribute("CHECKSUMHASH", Reponse[10]);
					request.setAttribute("URL", Reponse[11]);
					
					
					
					if (OP.equals("Invalid Request")) {
						throw new ServletException("Invalid Request...");
					}
					return "Interface/PAYTM";		
					//return "PAYTM";

				}

				// return null;
			}
			
			 @RequestMapping(value = { "PAYTMONL" }, method = { RequestMethod.GET })
			        public String PAYTMONL(final HttpServletRequest request, final HttpServletResponse response, final HttpSession session) throws Exception {
			        String OP = "";
			        final String Amount = request.getParameter("UniqueID");
			        final String Type = request.getParameter("Type");
			        final String Prvnt = request.getParameter("Prvnt");
			        final String PRCSID = request.getParameter("PRCSID");
			        
			        ArrayList<String> Data = new ArrayList<String>();
			        Data = (ArrayList<String>)GetDBData.Call(Amount, Type, Prvnt, PRCSID, "", "LSW_SGETPAYTMREDRCT");
			         String ResultVal=Data.get(0).toString();
			         request.setAttribute("ERRORMSG", (Object)Data.get(1));
			         
			        if(ResultVal.equals("Yes"))
			        {
			        OP = PAYTM.PaymentCall(Amount, Type, Prvnt, PRCSID);
			        final String[] Reponse = OP.split("~");
			        ArrayList<String> Data1 = new ArrayList<String>();
			        Data1 = (ArrayList<String>)GetDBData.Call(Amount, Type, (String)Reponse[1], PRCSID, "INIT", "LSW_SPAYTMINITENTRY");
			        request.setAttribute("MID", (Object)Reponse[0]);
			        request.setAttribute("ORDER_ID", (Object)Reponse[1]);
			        request.setAttribute("CUST_ID", (Object)Reponse[2]);
			        request.setAttribute("INDUSTRY_TYPE_ID", (Object)Reponse[3]);
			        request.setAttribute("CHANNEL_ID", (Object)Reponse[4]);
			        request.setAttribute("TXN_AMOUNT", (Object)Reponse[5]);
			        request.setAttribute("WEBSITE", (Object)Reponse[6]);
			        request.setAttribute("EMAIL", (Object)Reponse[7]);
			        request.setAttribute("MOBILE_NO", (Object)Reponse[8]);
			        request.setAttribute("CALLBACK_URL", (Object)Reponse[9]);
			        request.setAttribute("CHECKSUMHASH", (Object)Reponse[10]);
			        request.setAttribute("URL", (Object)Reponse[11]);
			        if (OP.equals("Invalid Request")) {
			            throw new ServletException("Invalid Request...");
			        }
			        return "Interface/PAYTM";
			        }
			        else
			        {
			        return "Interface/PAYTMCHK";        	
			        }
			    }

			@RequestMapping(value = { "PAYTMRes/*" }, method = {
					org.springframework.web.bind.annotation.RequestMethod.POST })
			public String PAYTMRes(HttpServletRequest request, HttpServletResponse response, HttpSession session)
					throws Exception {
				String OP = "";

				String CURRENCY = request.getParameter("CURRENCY");
				String GATEWAYNAME = request.getParameter("GATEWAYNAME");
				String RESPMSG = request.getParameter("RESPMSG");
				String BANKNAME = request.getParameter("BANKNAME");
				String PAYMENTMODE = request.getParameter("PAYMENTMODE");
				String MID = request.getParameter("MID");
				String RESPCODE = request.getParameter("RESPCODE");
				String TXNID = request.getParameter("TXNID");
				String TXNAMOUNT = request.getParameter("TXNAMOUNT");
				String ORDERID = request.getParameter("ORDERID");
				String STATUS = request.getParameter("STATUS");
				String BANKTXNID = request.getParameter("BANKTXNID");
				String TXNDATE = request.getParameter("TXNDATE");
				String CHECKSUMHASH = request.getParameter("CHECKSUMHASH");

				String DATAXML = "<DATA><ROW>";	
				DATAXML = DATAXML + "<CURRENCY>"+ CURRENCY + "</CURRENCY>";
				DATAXML = DATAXML + "<GATEWAYNAME>"+ GATEWAYNAME + "</GATEWAYNAME>";
				DATAXML = DATAXML + "<RESPMSG>"+ RESPMSG + "</RESPMSG>";
				DATAXML = DATAXML + "<BANKNAME>"+ BANKNAME + "</BANKNAME>";
				DATAXML = DATAXML + "<PAYMENTMODE>"+ PAYMENTMODE + "</PAYMENTMODE>";
				DATAXML = DATAXML + "<MID>"+ MID + "</MID>";
				DATAXML = DATAXML + "<RESPCODE>"+ RESPCODE + "</RESPCODE>";
				DATAXML = DATAXML + "<TXNID>"+ TXNID + "</TXNID>";
				DATAXML = DATAXML + "<TXNAMOUNT>"+ TXNAMOUNT + "</TXNAMOUNT>";
				DATAXML = DATAXML + "<ORDERID>"+ ORDERID + "</ORDERID>";
				DATAXML = DATAXML + "<STATUS>"+ STATUS + "</STATUS>";
				DATAXML = DATAXML + "<BANKTXNID>"+ BANKTXNID + "</BANKTXNID>";
				DATAXML = DATAXML + "<TXNDATE>"+ TXNDATE + "</TXNDATE>";
				DATAXML = DATAXML + "<CHECKSUMHASH>"+ CHECKSUMHASH + "</CHECKSUMHASH>";			
						DATAXML = DATAXML + "</ROW></DATA>";
				
				//Object time = session.getAttribute("LogSession");
				//if (time == null) {
				//	return "redirect:";
				//} else {
					OP = PAYTM.PaymentCallRes(DATAXML, CHECKSUMHASH);

					if (OP.equals("Invalid Response")) {
						throw new ServletException("Invalid Response...");
					}
					return "redirect:" + OP;

				//}

				// return null;
			}


@RequestMapping(value = { "PAYTMRes" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.GET })
public String PAYTMRes1(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";

	//Object time = session.getAttribute("LogSession");
	//if (time == null) {
	//	return "redirect:";
	//} else {
		
		ArrayList<String> Data=new ArrayList<String>();
		
		Data	= GetDBData.Call(request.getParameter("PrMs1"),"", "", "", "", "LSW_SPAYTMResData");

		request.setAttribute("GATEWAYNAME", Data.get(0));
		request.setAttribute("BANKNAME", Data.get(1));
		request.setAttribute("TXNID", Data.get(2));
		request.setAttribute("BANKTXNID", Data.get(3));		
		request.setAttribute("TXNAMOUNT", Data.get(4));
		request.setAttribute("TXNDATE", Data.get(5));
		request.setAttribute("Status", Data.get(6));
		request.setAttribute("Message", Data.get(7));
		
		return "Interface/PAYTMRes";

//	}

	// return null;
}


			//PAYTM GATEWAY END
			//PAYTM GATEWAY END


//DMS START

@RequestMapping(value = { "/DMS" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String DMS(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	DMS getdata = new DMS();

	boolean isMultipart = ServletFileUpload.isMultipartContent(request);

	String PrcsID = request.getParameter("PrcsID");

	String FormName = request.getParameter("FormName");

	String names = request.getParameter("names");

	String descrptns = request.getParameter("descrptns");

	String flsize = request.getParameter("flsize");

	String vrsnno = request.getParameter("vrsnno");

	String usrpwd = request.getParameter("usrpwd");

	String domain = request.getParameter("domain");
	
    String CusID = request.getParameter("CusID");
	
	String DocName = request.getParameter("DocName");

	String DBSrc = request.getParameter("DBSrc");

	getdata.PrcsID(PrcsID);

	getdata.FormName(FormName);

	getdata.names(names);

	getdata.descrptns(descrptns);

	getdata.flsize(flsize);

	getdata.vrsnno(vrsnno);

	getdata.usrpwd(usrpwd);

	getdata.domain(domain);
	
    getdata.CusID(CusID);
	
	getdata.DocName(DocName);

	getdata.DBSrc(DBSrc);

	Object time = session.getAttribute("LogSession");
	if (time == null) {
		return "redirect:";
	} else {

		String retval = getdata.DMSPUSH(request, response);

		return retval;
	}
}

//DMS END

//DMS VIEW START





@RequestMapping(value={"DMSVIEW"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})

@ResponseBody

public void DMSVIEW(HttpServletRequest request, HttpServletResponse response, HttpSession session)

throws Exception

{
//@RequestMapping(value = { "/DMSVIEW" }, method = {

//        org.springframework.web.bind.annotation.RequestMethod.GET })

//@ResponseBody

//public byte[] DMSVIEW(HttpServletRequest request, HttpServletResponse response, HttpSession session)

     //     throws Exception {

     //DMSView getdata = new DMSView();

     boolean isMultipart = ServletFileUpload.isMultipartContent(request);

     String PrcsID = request.getParameter("PrcsID");

     String DMSID = request.getParameter("DMSID");

     String DMSURL = "";

     String fileNAME="";

     String format="";

     String retval = "";

     //getdata.PrcsID(PrcsID);



     //getdata.DMSID(DMSID);



     ////Object time = session.getAttribute("LogSession");

     //if (time == null) {

     //     return "redirect:";

     //} else {

           ArrayList<String> Data=new ArrayList<String>();
           Data = GetDBData.Call(PrcsID,DMSID, "", "", "", "LSW_SDMSVIEW");

           DMSURL = Data.get(0);

           fileNAME = Data.get(1);

           format=Data.get(2);

      /*if (format.endsWith("xlsx")) {

          contentType = "application/octet-stream";

      } else if (format.endsWith("pdf")) {

          contentType = "application/pdf";

      } else {

          throw new RuntimeException("File type not found");

      }*/

           URL url = new URL(DMSURL);

      HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();

      int responseCode = httpConn.getResponseCode();

      // always check HTTP response code first

      if (responseCode == HttpURLConnection.HTTP_OK) {

           // final FileInputStream fileInputStream = new FileInputStream(new File(DMSURL));

      // final byte[] buf = new byte[16777216];

      // int len;

       ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

       byte[] chunk = new byte[4096];

       int bytesRead;

       InputStream stream = httpConn.getInputStream();

       try {

           while ((bytesRead = stream.read(chunk)) > 0) {

               outputStream.write(chunk, 0, bytesRead);

           }
       byte[] DocContent;

       stream.close();

       DocContent =  outputStream.toByteArray();

     // outByteStream = new ByteArrayOutputStream();

     // wb.write(outByteStream);

       //excelStream = new ByteArrayInputStream(outByteStream.toByteArray());

    // file = outByteStream.toByteArray();

       //fileInputStream.close();

       outputStream.close();

   //  response.setContentType("application/ms-excel");

     response.setContentLength(DocContent.length);

     response.setHeader("Content-Disposition", "attachment; filename=" + fileNAME);

     OutputStream outStream = response.getOutputStream();

     outStream.write(DocContent);

     outStream.flush();

     outStream.close();

       } catch (IOException e) {

            stream.close();

            outputStream.close();

           e.printStackTrace();
       }
     }

}
//DMS VIEW END

//POSIDEX START

@RequestMapping(value = { "POSIDEX" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String POSIDEX(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String param1 = request.getParameter("PRCSID");
	String param2 = request.getParameter("CUSID");
	

	Object time = session.getAttribute("LogSession");
	if (time == null) {
		return "redirect:";
	} else {
		OP = POSIDEX.PosidexGet(param1,param2,"","","","");

		String Reponse[] = OP.split("~");
		status=Reponse[0];
		Msg=Reponse[1];
					
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		return  status+ "|" + Msg;		
		//return "PAYTM";

	}

	// return null;
}

//POSIDEX END


//MOBILITY BRTOCRM START

@RequestMapping(value = { "BRTOCRM" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String BRTOCRM(HttpServletRequest request, HttpServletResponse response)
		throws Exception, ClassNotFoundException {
	
	
	String FNname = "LSW_SBRTOSUITECRM";
	String SOURCE = request.getParameter("SOURCE");
	String TOKENID = request.getParameter("TOKENID");;
	
	

	
	ArrayList<String> Data=new ArrayList<String>();
	Data = GetDBData.Call( SOURCE,TOKENID, "", "" ,"", FNname );
	String Result= Data.get(0);


	

		return Result ;

	
		
}


//MOBILITY BRTOCRM END

//MOBILITY POSIDEX START

@RequestMapping(value = { "MOBPOSIDEX" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String MOBPOSIDEX(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String param1 = request.getParameter("PRCSID");
	String param2 = request.getParameter("CUSID");
	String finaloutput ="" ;
	

	Object time = session.getAttribute("LogSession");

		OP = POSIDEX.PosidexGet(param1,param2,"","","","");

		String Reponse[] = OP.split("~");
		status=Reponse[0];
		Msg=Reponse[1];
					
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		
		
		if  (status.equals("Success"))
		{
		
		String FNname = "LSW_SDEDUPEAPI";
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( param1,param2, "", "" ,"", FNname );
		String Result= Data.get(0);

		 finaloutput =Result;
		//return  status+ "|" + Msg;		

		}
		
		else 
		{
			finaloutput ="{\r\n" + 
					"   \"data1\":\"\",\r\n" + 
					"   \"data2\":\"\",\r\n" + 
					"   \"data3\":\"\",\r\n" + 
					"   \"data4\":\"\",\r\n" + 
					"   \"data5\":\"\",\r\n" + 
					"   \"status\":\"201\",\r\n" + 
					"   \"message\":\"FAILURE\"\r\n" + 
					"}";
			
		}
		
		
		return finaloutput ;

}

//MOBILITY POSIDEX END


//LMS CUSTOMER START

@RequestMapping(value = { "LMSCUS" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String LMSCUS(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String param1 = request.getParameter("PRCSID");
	String param2 = request.getParameter("CUSID");
	

	Object time = session.getAttribute("LogSession");
	if (time == null) {
		return "redirect:";
	} else {
		OP = LMSCUS.LMSCUSPUSH(param1,"",param2,"","","");

		String Reponse[] = OP.split("~");
		status=Reponse[0];
		Msg=Reponse[1];
					
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		return  status+ "|" + Msg;		
		//return "PAYTM";

	}

	// return null;
}

//LMS CUSTOMER END

//LMS PF START

@RequestMapping(value = { "LMSPF" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String LMSPF(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String param1 = request.getParameter("PRCSID");
	String param2 = request.getParameter("PFNO");
	String param3 = request.getParameter("RECEIPTNO");
	

	Object time = session.getAttribute("LogSession");
	if (time == null) {
		return "redirect:";
	} else {
		OP = LMSPF.LMSPFPUSH(param1,param2,param3,"","","");

		String Reponse[] = OP.split("~");
		status=Reponse[0];
		Msg=Reponse[1];
					
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		return  status+ "|" + Msg;		
		//return "PAYTM";

	}

	// return null;
}

//LMS PF END			


//COLLECIONS START
@RequestMapping(value = { "COLLECTIONS" }, method = {

         org.springframework.web.bind.annotation.RequestMethod.POST })

@ResponseBody

public String COLLECIONS(HttpServletRequest request, HttpServletResponse response, HttpSession session)

           throws Exception {

     String OP = "";

     String status = "";

     String Msg = "";

     String ReceiptNo ="";

     String FnlResp="";

     String param1 = request.getParameter("PRCSID");

     String param2 = request.getParameter("PFNO");

     Object time = session.getAttribute("LogSession");

     if (time == null) {

           return "redirect:";

     } else {

           OP = COLLECTIONS.CollectionsPush(param1,param2,"","","","");
           String Reponse[] = OP.split("~");

           status=Reponse[0];

           Msg=Reponse[1];

           ReceiptNo=Reponse[2];

           FnlResp=Reponse[3];
           if (OP.equals("Invalid Request")) {

                  throw new ServletException("Invalid Request...");

           }

           return  status+ "|" + Msg + "|" + ReceiptNo + "|" + FnlResp;           

           //return "PAYTM";
     }
     // return null;
}
//COLLECIONS END
//MOBILITY EMAIL VERIDICATION STRT
	@RequestMapping(value = { "MEmailVerfy" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String MEmailVerfy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
			Object time = session.getAttribute("LogSession");
		
			
			String param1 = request.getParameter("URL");
			String param2 = request.getParameter("PRCSID");
			String param3 = request.getParameter("CUSID");
			String param4 = request.getParameter("MAILID");
			String param5 = request.getParameter("PARAM5");
			ArrayList<String> Data=new ArrayList<String>();
			Data = GetDBData.Call( param1,param2,param3,param4,param5, "LSW_SFRMMAILOTP");
			String RPTURL = Data.get(0);
			String CC = Data.get(1);
			String BCC = Data.get(2);
			String subject = Data.get(3);
			String fromId = Data.get(4);
			String password = Data.get(5);
			String host = Data.get(6);
			String port = Data.get(7);
			String ERR_FLG = Data.get(8);
			String ERR_MSG = Data.get(9);
			String TOMAIL = Data.get(10);
			String retval="";



					
			
			if(ERR_FLG.toString().equals("N")) {
				
							
			MailSendWthAttchRPTBdy MS = new MailSendWthAttchRPTBdy();
			String s1 = MS.Send(fromId, password, TOMAIL, CC, BCC, subject, RPTURL, host+"|"+port, "", "");

			return s1;
			}
			else {
			retval=ERR_MSG;
			}
			// return retval;
			//MailSendWthAttchRPTBdy
			return retval;
			
			}
	
	
	@RequestMapping(value={"/ExcelMultiDynmcUpld"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	  @ResponseBody
	  public String ExcelMultiDynmcUpld(HttpServletRequest request, HttpServletResponse response,HttpSession session)
	    throws Exception
	  {
		ExcelMultiDynmcUpld getdata = new ExcelMultiDynmcUpld();
	    boolean isMultipart = ServletFileUpload.isMultipartContent(request);
	    String param1 = request.getParameter("param1");
	    String param2 = request.getParameter("param2");
	    String param3 = request.getParameter("param3");
	    String param4 = request.getParameter("param4");
	    String param5 = request.getParameter("param5");
	    String DBSrc = request.getParameter("DBSrc");
	   
	    getdata.param1(param1);
	    getdata.param2(param2);
	    getdata.param3(param3);
	    getdata.param4(param4);
	    getdata.param5(param5);
	    getdata.DBSrc(DBSrc);
	   
	    Object time = session.getAttribute("LogSession");
	    if (time == null) {
	    	String retval = getdata.ExcelMultiDynmcUpld(request, response);
		    return retval;
		    
	  //  return "redirect:";
	    }
	    else
	    {
	    String retval = getdata.ExcelMultiDynmcUpld(request, response);
	    return retval;
	    }
	  }
	
	
	@RequestMapping(value = { "MMailVerfy" }, method = {
	org.springframework.web.bind.annotation.RequestMethod.GET })
	public String MMailVerfy(HttpServletRequest request, HttpServletResponse response, HttpSession session)
	throws Exception {


	String url = request.getScheme() + "://" +   // "http" + "://
	           request.getServerName() +       // "myhost"
	           ":" +                           // ":"
	           request.getServerPort() +       // "8080"
	           request.getRequestURI() +       // "/people"
	           "?" +                           // "?"
	           request.getQueryString();
	String Param1="",Param2 ="",Param3="",Param4="",Param5="";
	try {
	  Pattern p = Pattern.compile("VERIFICATION=([^&]+)");
	  Matcher m = p.matcher(url);
	  while (m.find()) {
	   Param1=m.group();
	  }
	  Param1=Param1.replace("VERIFICATION=", "");
	  p = Pattern.compile("ID1=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param2=m.group();
	  }
	  Param2=Param2.replace("ID1=", "");
	  p = Pattern.compile("ID2=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param3=m.group();
	  }
	  Param3=Param3.replace("ID2=", "");
	  p = Pattern.compile("ID3=([^&]+)");
	  m = p.matcher(url);
	  while (m.find()) {
	   Param4=m.group();
	  }
	  Param4=Param4.replace("ID3=", "");
	  ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( Param1,Param2,Param3,Param4,Param5, "LSW_SVERFYMAILOTP");
		String RPTURL = Data.get(0);
		request.setAttribute("RPTURL", Data.get(0));
		} catch (PatternSyntaxException ex) {
		  // error handling
		}
		
		
		return "Interface/EmailVerify";
		
		}
	
	
	//MOBILITY OTPVERIFY START
	@RequestMapping(value = { "MVerifyMail" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String MVerifyMail(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {
		
		
		String FNname = "LSW_SEMAILVERIFY";
		String PrcsID = request.getParameter("PrcsID");
		String EMAILID = request.getParameter("EMAILID");
		String CUSID = request.getParameter("CUSID");;
		
		

		
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( PrcsID,CUSID, EMAILID, "" ,"", FNname );
		String Result= Data.get(0);

	
		
		if (Result.equals("Y")) {

			return Result ;

			}
		
		else {
			return "N" ;
		}
		
			
	}


	//MOBILITY OTPVERIFY END

	//EMAIL VERIDICATION END



//MOBILITY START

//Customer App No Generation

@RequestMapping(value = { "CusGen" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST } ,  headers = "content-type=application/json")
@ResponseBody
public String CusGen(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String ReceiptNo ="";
	
	String param1 = request.getParameter("Cus");
	String param2 = request.getParameter("APP");
	String param3 = request.getParameter("UserID");
	String param4 = request.getParameter("Password");

	//Object time = session.getAttribute("LogSession");
	//if (time == null) {
	//	return "redirect:";
//	} else {
		OP = Mobility.CusGen.IDGeneration(param1,param2,param3,param4,"","");
	
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		return OP ;		
		//return "PAYTM";

	//}

	// return null;
}


//Applicant Push 

@RequestMapping(value = { "ApplicantPush" }, method = {
		org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String ApplicantPush(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	String OP = "";
	String status = "";
	String Msg = "";
	String ReceiptNo ="";
	
	String param1 = request.getParameter("Cus");
	String param2 = request.getParameter("APP");
	

	//Object time = session.getAttribute("LogSession");
	//if (time == null) {
	//	return "redirect:";
//	} else {
		OP = Mobility.ApplicantPush.Creation(param1,param2,"","","","");
	
		
		if (OP.equals("Invalid Request")) {
			throw new ServletException("Invalid Request...");
		}
		return OP ;		
		//return "PAYTM";

	//}

	// return null;
}



//Mobility TotalKYC

@RequestMapping(value = { "MTotalKyc" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String MTotalKyc(HttpServletRequest request, HttpServletResponse response, HttpSession session)
		throws Exception {
	Mobility.MTotalKyc getdata = new Mobility.MTotalKyc();

	//String reqxml = request.getParameter("reqxml");
	//String apitype = request.getParameter("apitype");
	//String processId = request.getParameter("processId");
	String JSONval = request.getParameter("JSONval");
	String DBSrc = request.getParameter("DBSrc");

	//getdata.reqxml(reqxml);
  //getdata.apitype(apitype);
	//getdata.processId(processId);
	getdata.JSONval(JSONval);
	getdata.DBSrc(DBSrc);


		String retval = getdata.TotlKyc();
		return retval;
	
}



//MOBILITY END

//COMMONCALL     START

@RequestMapping(value = { "COMMONCALL" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String COMMONCALL(HttpServletRequest request, HttpServletResponse response )
		throws Exception, ClassNotFoundException {
	
	
	String SPNAME = request.getParameter("SPNAME");
	String XML = request.getParameter("XML");
	String TOKENID = request.getParameter("TOKENID");
	String DATA1 = request.getParameter("DATA1");
	String DATA2 = request.getParameter("DATA2");
	
	String FNname = "LSW_SCOMMONCALL";

	ArrayList<String> Data=new ArrayList<String>();
	Data = GetDBData.Call( SPNAME, XML, TOKENID , DATA1 ,DATA2, FNname );
	String Result= Data.get(0);
		return Result ;	
}


//COMMONCALL     END

//COMMONCALLDASHBOARD  START Date : 22072020

@RequestMapping(value = { "DASHBOARD" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String DASHBOARD(HttpServletRequest request, HttpServletResponse response )
		throws Exception, ClassNotFoundException {

	String SPNAME = request.getParameter("SPNAME");
	String XML = request.getParameter("XML");
	String TOKENID = request.getParameter("TOKENID");
	String DATA1 = request.getParameter("DATA1");
	String DATA2 = request.getParameter("DATA2");
	String FNname = "LSW_SDASHBOARDCOMMONCALL";
	String OUTPUT ="";
	
	
	if (SPNAME.equals("MAIN"))	
	{

	ArrayList<String> Data=new ArrayList<String>();
	Data = GetDBData.Call( SPNAME, XML, TOKENID , DATA1 ,DATA2, FNname );
	String Result11= Data.get(10);
	String Result12= Data.get(11);
	String Result13= Data.get(12);
	String Result14= Data.get(13);
	String Result15= Data.get(14);
	 OUTPUT = Result11 +"~" + Result12 +"~" + Result13 +"~" + Result14 +"~" + Result15 ;
	}
	else {
		
		ArrayList<String> Data=new ArrayList<String>();
		Data = GetDBData.Call( SPNAME, XML, TOKENID , DATA1 ,DATA2, FNname );
		String Result1= Data.get(0);

		OUTPUT = Result1  ;
		
	}
		return  OUTPUT ;	
}


//COMMONCALLDASHBOARD     END

//MOBILITY OTPSEND START
@RequestMapping(value = { "MsendSMS" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String MsendSMS(HttpServletRequest request, HttpServletResponse response)
		throws Exception, ClassNotFoundException {

	sendSMS SndSMS = new sendSMS();

	String param1 = "";
	String param2 = "";
	String param3 = request.getParameter("MobNo");
	String param4 = "";
	String param5 = "";
	//String DBSrc = request.getParameter("DBSrc");
	String spname1 = "SAM_SgetRecepientDataToSMSFrOTP";
	String spname2 = "LSW_supdateSMSstatus";

	SndSMS.param1(param1);
	SndSMS.param2(param2);
	SndSMS.param3(param3);
	SndSMS.param4(param4);
	SndSMS.param5(param5);
	SndSMS.spname1(spname1);
	SndSMS.spname2(spname2);

	return SndSMS.SendSMSMain();
}


//MOBILITY OTPSEND END


//MOBILITY OTPVERIFY START
@RequestMapping(value = { "MverifySMS" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String MverifySMS(HttpServletRequest request, HttpServletResponse response)
		throws Exception, ClassNotFoundException {
	
	
	String FNname = "SCF_sValdtOTP";
	String OTP = request.getParameter("OTP");
	String MobNo = request.getParameter("MobNo");;

	
	ArrayList<String> Data=new ArrayList<String>();
	Data = GetDBData.Call( "","", OTP, MobNo ,"", FNname );
	String Result= Data.get(0);

	return Result ;
		
}


//MOBILITY OTPVERIFY END


//OPA START

//WAIVER

@RequestMapping(value = { "OPAWaiver" }, method = {org.springframework.web.bind.annotation.RequestMethod.POST } )
@ResponseBody
public String OPAWaiver(HttpServletRequest request, HttpServletResponse response, HttpSession session)
throws Exception {
String OP = "";
String status = "";
String Msg = "";
String ReceiptNo ="";

String param1 = request.getParameter("PRCSID");
String param2 = request.getParameter("OPANO");


//Object time = session.getAttribute("LogSession");
//if (time == null) {
//return "redirect:";
//} else {
OP = OPA.OPAWaiver(param1,param2,"","","","");


if (OP.equals("Invalid Request")) {
throw new ServletException("Invalid Request...");
}
return OP ;
//return "PAYTM";

//}

//return null;
}


//DEVIATIONS

@RequestMapping(value = { "OPADeviations" }, method = {org.springframework.web.bind.annotation.RequestMethod.POST })
@ResponseBody
public String OPADeviations(HttpServletRequest request, HttpServletResponse response, HttpSession session)
throws Exception {
String OP = "";
String status = "";
String Msg = "";
String ReceiptNo ="";

String param1 = request.getParameter("PRCSID");
String param2 = request.getParameter("OPANO");


//Object time = session.getAttribute("LogSession");
//if (time == null) {
//return "redirect:";
//} else {
OP = OPA.OPADeviations(param1,param2,"","","","");


if (OP.equals("Invalid Request")) {
throw new ServletException("Invalid Request...");
}
return OP ;
//return "PAYTM";

//}

//return null;
}

//OPA END
@RequestMapping(value = {"/InsrncePrmeium"}, method = {RequestMethod.POST})
@ResponseBody
public String InsrncePrmeium(HttpServletRequest request, HttpServletResponse response) throws Exception, ClassNotFoundException {
	   InsrncePrmeium InsrncePrmeium = new InsrncePrmeium();
	 String param1 = request.getParameter("param1");
  String param2 = request.getParameter("param2");
  String param3 = request.getParameter("param3");
  String param4 = request.getParameter("param4");
  String param5 = request.getParameter("param5");
  String DBSrc = request.getParameter("DBSrc");
  String spname1 = request.getParameter("spname1");
  String spname2 = request.getParameter("spname2");
  InsrncePrmeium.param1(param1);
  InsrncePrmeium.param2(param2);
  InsrncePrmeium.param3(param3);
  InsrncePrmeium.param4(param4);
  InsrncePrmeium.param5(param5);
  InsrncePrmeium.spname1(spname1);
  InsrncePrmeium.spname2(spname2);
	  
	  
  return InsrncePrmeium.InsrncePrmeium();
}

				
	  @RequestMapping(value={"Logout"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})
	  public String Logout(Locale locale, Model model,HttpSession session)
	  {
	    logger.info("Welcome home! The client locale is {}.", locale);
	    session.removeAttribute("LogSession");
	    session.removeAttribute("csrfPreventionSaltCache");
	    session.removeAttribute("User");
	    session.removeAttribute("CPM");
	    session.removeAttribute("CURL");
	    

	    return "Common/Pages/Userview/Logout";
	  }
	  
	
	@RequestMapping(value = { "/SessionLogout" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String SessionLogout(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {

		UI_GetData getdata = new UI_GetData();
		String param1 = request.getParameter("param1");
		String param2 = request.getParameter("param2");
		String param3 = request.getParameter("param3");
		String param4 = request.getParameter("param4");
		String param5 = request.getParameter("param5");
		String spname = request.getParameter("spname");
		String DBSrc = request.getParameter("DBSrc");

		getdata.param1(param1);
		getdata.param2(param2);
		getdata.param3(param3);
		getdata.param4(param4);
		getdata.param5(param5);
		getdata.spname(spname);
		getdata.DBSrc(DBSrc);
		String retval = getdata.UI_GetData1();
		// return retval;

		session.setAttribute("LogSession1", retval);
		session.removeAttribute("LogSession1");
		return retval;
	}
	
	
	
	//MOBILITY DATA INSERT START
	
	
		@RequestMapping(value = { "Mformdatains" }, method = {
				org.springframework.web.bind.annotation.RequestMethod.POST })
		@ResponseBody
		public String Mformdatains(HttpServletRequest request, HttpServletResponse response, HttpSession session, @RequestBody String json)
				throws Exception {
			UI_formdatainsert getdata = new UI_formdatainsert();
			
			
			String xml;

			

			String tablenameins = request.getParameter("tablenameins");
			
			if (tablenameins.equals("LSW_TUPLOADDOCUMENT")) 
			{
				 xml = json ;	
			}
			else
			{
				 xml = request.getParameter("xml");
			}
			

			String tablenameins1 = request.getParameter("tablenameins1");

			String activityid = request.getParameter("activityid");

			String activityname = request.getParameter("activityname");

			String DBSrc = request.getParameter("DBSrc");

			getdata.xml(xml);

			getdata.tablenameins(tablenameins);

			getdata.tablenameins1(tablenameins1);

			getdata.activityid(activityid);

			getdata.activityname(activityname);

			getdata.DBSrc(DBSrc);


			

				String retval = getdata.UI_formdatainsertdata();

				return retval;
			
		}
		
		
		//MOBILITY DATA INSERT END
	

//MOBILITY COLLECIONS START
	@RequestMapping(value = { "MOBCOLLECTIONS" }, method = {

	         org.springframework.web.bind.annotation.RequestMethod.POST })

	@ResponseBody

	public String MCOLLECTIONS(HttpServletRequest request, HttpServletResponse response, HttpSession session)

	           throws Exception {

	     String OP = "";

	     String status = "";

	     String Msg = "";

	     String ReceiptNo ="";

	     String FnlResp="";

	     String param1 = request.getParameter("PRCSID");

	     String param2 = request.getParameter("PFNO");
	     
	     String param3 = request.getParameter("RECEIPTNO");

	     Object time = session.getAttribute("LogSession");
	     
	     String Cusfailure ="Customer Creation/Updation failed" ;
	     
	     String Colfailure  ="Collections failed" ;
	     
	     String Finaloutput="";


	
			OP = LMSPF.LMSPFPUSH(param1,param2,param3,"","","");

			String Reponse[] = OP.split("~");
			status=Reponse[0];
			Msg=Reponse[1];
			
			
		 	String OUTPUTCUS =  status+  "|"  + Msg;	
						
			
			if (OP.equals("Invalid Request")) {
				return "" + "|" + "" + "|" + "" + "|" + Cusfailure ;
			}
			

			
			if  (OUTPUTCUS.equals(""))
    		{
    		
				return "" + "|" + "" + "|" + "" + "|" + Cusfailure ;
    		
    	
    		}
			
    	
    	else if  (status.equals("Fail"))
			{
    		return "" + "|" + "" + "|" + "" + "|" + Msg ;
			
			}
			
    	else if  (status.equals("No Data"))
		{
		
    		return "" + "|" + "" + "|" + "" + "|" + Cusfailure ;
		
		
		}
    	
    	else if   (status.equals("Success"))
			{
			//return "PAYTM";


			
	           OP = COLLECTIONS.CollectionsPush(param1,param2,"","","","");
	           String Reponse1[] = OP.split("~");

	           status=Reponse1[0];

	           Msg=Reponse1[1];

	           ReceiptNo=Reponse1[2];

	           FnlResp=Reponse1[3];
	           
	           if (OP.equals("Invalid Request")) {

	        	   return "" + "|" + "" + "|" + "" + "|" + Colfailure ;

	           }
	           
	            Finaloutput = status+ "|" + Msg + "|" + ReceiptNo + "|" + FnlResp;

	                   

	           //return "PAYTM";
	
	     // return null;
	}
			
			return  Finaloutput;   
	}
	//MOBILITY COLLECIONS END
	
	// 7073 Environment Start //ADVASMART START
	@RequestMapping(value = { "/ADVASMART" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String ADVASMART(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
			Object time = session.getAttribute("LogSession");
			String s1="";
			if (time == null) {
			return "redirect:";
			} else {
				
				
				String param1 = request.getParameter("PRCSID");
				String param2 = request.getParameter("PROPNO");
				String param3 = request.getParameter("PARAM3");
				String param4 = request.getParameter("PARAM4");
				String param5 = request.getParameter("REQTYP");
				String SPNAME = request.getParameter("SPNAME");
				
				ADVASMART ADVASMART = new ADVASMART();
				s1 = ADVASMART.CheckReqRS(param1, param2, param3, param4, param5, SPNAME);
				
				/*
				 * ArrayList<String> Data=new ArrayList<String>(); Data = GetDBData.Call(
				 * param1,param2,param3,param4,param5, SPNAME); String URL= Data.get(0); String
				 * APIKEY= Data.get(1); String APIVRSN= Data.get(2); String TOKN= Data.get(3);
				 * String APITYP= Data.get(4);
				 */
					
				
			}
			return s1;
	}
	
	
	
	@RequestMapping(value = { "/ADVASMARTMSTR" }, method = {
			org.springframework.web.bind.annotation.RequestMethod.POST })
			@ResponseBody
			public String ADVASMARTMSTR(HttpServletRequest request, HttpServletResponse response, HttpSession session)
			throws Exception {
			Object time = session.getAttribute("LogSession");
			String s1="";
			if (time == null) {
			return "redirect:";
			} else {
				
				
				String param1 = request.getParameter("PARAM1");
				String param2 = request.getParameter("PARAM2");
				String param3 = request.getParameter("PARAM3");
				String param4 = request.getParameter("PARAM4");
				String param5 = request.getParameter("PARAM5");
				String SPNAME = request.getParameter("SPNAME");
				
				ADVASMART ADVASMART = new ADVASMART();
				s1 = ADVASMART.ADVASMARTMSTR(param1, param2, param3, param4, param5, SPNAME);
				
				/*
				 * ArrayList<String> Data=new ArrayList<String>(); Data = GetDBData.Call(
				 * param1,param2,param3,param4,param5, SPNAME); String URL= Data.get(0); String
				 * APIKEY= Data.get(1); String APIVRSN= Data.get(2); String TOKN= Data.get(3);
				 * String APITYP= Data.get(4);
				 */
					
				
			}
			return s1;
	}
	//ADVASMART END   7073 Environment End 

	@RequestMapping(value = { "/sendSMS" }, method = { org.springframework.web.bind.annotation.RequestMethod.POST })
	@ResponseBody
	public String sendSMS(HttpServletRequest request, HttpServletResponse response)
			throws Exception, ClassNotFoundException {

		sendSMS SndSMS = new sendSMS();

		String param1 = request.getParameter("param1");
		String param2 = request.getParameter("param2");
		String param3 = request.getParameter("param3");
		String param4 = request.getParameter("param4");
		String param5 = request.getParameter("param5");
		String DBSrc = request.getParameter("DBSrc");
		String spname1 = request.getParameter("spname1");
		String spname2 = request.getParameter("spname2");

		SndSMS.param1(param1);
		SndSMS.param2(param2);
		SndSMS.param3(param3);
		SndSMS.param4(param4);
		SndSMS.param5(param5);
		SndSMS.spname1(spname1);
		SndSMS.spname2(spname2);

		return SndSMS.SendSMSMain();
	}
	
	//OVERDUE FETCH START
	@RequestMapping(value = { "OVERDUE" }, method = {

	 org.springframework.web.bind.annotation.RequestMethod.POST })

	@ResponseBody

	public String OVERDUE(HttpServletRequest request, HttpServletResponse response, HttpSession session)

	   throws Exception {

	String OP = "";

	String status = "";

	String Msg = "";

	String ReceiptNo ="";

	String FnlResp="";

	String param1 = request.getParameter("PRCSID");

	String param2 = request.getParameter("UID");

	Object time = session.getAttribute("LogSession");



	   OP = OVERDUE.OVERDUEFETCH(param1,param2,"","","","");
	   String Reponse[] = OP.split("~");

	   status=Reponse[0];

	   Msg=Reponse[1];

	   ReceiptNo=Reponse[2];

	   FnlResp=Reponse[3];
	   if (OP.equals("Invalid Request")) {

	          throw new ServletException("Invalid Request...");

	   }

	   return  status+ "|" + Msg + "|" + ReceiptNo + "|" + FnlResp;           

	   //return "PAYTM";

	//return null;
	}
	//OVERDUE FETCH END

}